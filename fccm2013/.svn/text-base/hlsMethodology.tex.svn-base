% Paper draft for FPGA 2013
\documentclass{acm_proc_article-sp}
\usepackage{graphicx}
\usepackage{multirow}
\usepackage[caption=false,font=footnotesize]{subfig}
\usepackage{dblfloatfix}
\usepackage{algorithmic}
\usepackage{algorithm}
\usepackage{xspace}

%\renewcommand{\topfraction}{0.5}
%\renewcommand{\dbltopfraction}{0.5}

\renewcommand\floatpagefraction{.9}
\renewcommand\topfraction{.9}
\renewcommand\bottomfraction{.9}
\renewcommand\dbltopfraction{.9}
\renewcommand\textfraction{.1}   
\setcounter{totalnumber}{50}
\setcounter{topnumber}{50}
\setcounter{bottomnumber}{50}

\newcommand{\eqnref}[1]{(\ref{#1})}
\newcommand{\figref}[1]{Figure~\ref{#1}}
\newcommand{\algref}[1]{Algorithm~\ref{#1}}
\newcommand{\secref}[1]{Section~\ref{#1}}
\newcommand{\tabref}[1]{Table~\ref{#1}}

\newcommand{\autoesl}{AutoESL\xspace}

\begin{document}

\title{A Soft Coarse-Grained Reconfigurable Array Based High-level Synthesis Methodology: Promoting Design Productivity and Exploring Extreme FPGA Frequency}

\numberofauthors{3}
% \author{
% % 1st. author
% \alignauthor
% name1\\
%        \affaddr{Electrical and Electronic Engineering}\\
%        \affaddr{The University of Hong Kong}\\
%        \email{email1}
% % 2nd. author
% \alignauthor
% name2\\
%        \affaddr{Electrical and Electronic Engineering}\\
%        \affaddr{The University of Hong Kong}\\
%        \email{email2}
% % 3rd. author
% \alignauthor
% name3\\
%        \affaddr{Electrical and Electronic Engineering}\\
%        \affaddr{The University of Hong Kong}\\
%        \email{email3}
% }

\author{}
\maketitle

\begin{abstract}
\input{abstract}
%High level synthesis (HLS) is one of the most efficient ways to improve hardware design productivity and it has attracted extensive research efforts from both academia and industry. These work mainly concentrated on transforming high level language (HLL) program to register transfer level (RTL) specification and left the RTL compiling process (logic synthesis, mapping, placing and routing) untouched. However, RTL compiling process has essential influence on the design productivity because engineers have to repeat the compile-debug-edit procedure many times. To overcome the problem, this paper presents a soft coarse grain reconfigurable array (SCGRA) based HLS method. Instead of transforming HLL program to RTL specification, it compiles HLL program to data flow graph (DFG), schedules the DFG to the pre-implemented SCGRA and generates bitstream of the target application through a simple combination of scheduling result and pre-implemented CGRA bitstream. Since the proposed HLS design method does not need to go through the time-consuming RTL compiling process, it is 10X-100X faster than \autoesl in transforming the same HLL program to final FPGA bitstream. At the same time, a well-organized SCGRA is developed to serve as the hardware infrastructure of the proposed HLS method and it can be implemented near the extreme frequency of the target FPGA device. In this case, any applications that fit in the SCGRA template are able to be implemented at extremely high frequency. Moreover, SCGRA based computation scheme also exhibits its advantages over \autoesl. With higher implementation frequency and more efficient computation scheme, the proposed HLS method outperforms \autoesl by 5X-30X in terms of performance under comparable hardware overhead and IO constrain.
\end{abstract}
 
% A category with the (minimum) three required fields
%\category{H.4}{Information Systems Applications}{Miscellaneous}
% A category including the fourth, optional field follows...
%\category{D.2.3}{Hardware Engineering}{Metrics}[complexity measures, performance measures]
%\terms{Theory}
%\keywords{High Level Synthesis, Soft Coarse Grain Reconfigurable Array, Design Productivity, High Frequency FPGA Design}

\input{introduction}
\input{related}
\input{methodology}
\input{scgra}
\input{results}
\input{conclusions}

\bibliographystyle{plain}
\bibliography{refs}

%\balancecolumns
\end{document}

