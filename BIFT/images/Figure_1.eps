%!PS-Adobe-3.0 EPSF-3.0
%%Title: WMF2EPS 1.32  : WMF->EPS conversion for agingdelay.wmf
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 7/13/2010 11:4:52
%%For: Administrator
%%BoundingBox: 56 56 365 184
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (WMF2EPS Color PS) (2010.0) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 0 0 365 184
%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman[/STSong-Light--GBK-EUC-H
dup{findfont}stopped{cleartomark}{/FontName get eq{pop cleartomark[
<b8c3cec4bcfed0e8d2aad3c3b5c4c4dab4e6ccabb6e0a1a3c4fabfc9d2d4cad4d3c3c8e7cfc2b5
c4b7bdb7a8d4d9b4f2d3a1a3ba>100 500<d4daa1b0506f7374536372697074a1b1b6d4bbb0bf
f2a3acd1a1d4f1a1b0506f7374536372697074a3a8b6d4b1e3d0afcabd41445343b5c4d3c5bbafa
3a9a1b1a1a3>115 485<d4daa1b0c9e8b1b8d1a1cfeea1b1b6d4bbb0bff2a3aca1b0bfc9d3c3b
4f2d3a1bbfac4dab4e6a1b1b5c4d6b5cac7beabc8b7b5c4a1a3>115 470<d4dacec4bcfed6d0c
9d9d3c3bcb8d6d6d7d6cce5a1a3>115 455<b5a5b6c0b4f2d3a1b8c3cec4bcfeb5c4b2bbcdacb
2bfb7d6bbf2d2b3a1a3>115 440 10 0/STSong-Light--GBK-EUC-H}{cleartomark}ifelse}
ifelse showpage(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}
bind def end version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get
def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 0 183.68504 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 0 0 365 184
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b
%%EndResource
end reinitialize
N 1723 106 M 1723 285 I 1880 285 I 1880 106 I 1723 106 I C 
0.867 0.887 0.805 1 scol  O 0.5 0.5 0.5 1 scol 1 Lj 1 Lc 16 Lw solid N 893 330 M 1268 330 I 1268 330 I 1288 397 I 1297 431 I 1306 465 I 1306 465 I 1343 330 I 1381 465 I 1418 330 I 1437 332 I 1456 330 I 1456 330 I 1467 364 I 1477 397 I 1486 431 I 1493 465 I 1493 465 I 1531 330 I 1643 330 I 1681 465 I 1880 465 I : 0.59 0.59 +S K 
; 0.5 0 0 1 scol N 893 555 M 1324 555 I 1324 555 I 1336 588 I 1347 622 I 1358 656 I 1368 689 I 1368 689 I 1411 555 I 1454 689 I 1497 555 I 1519 555 I 1540 555 I 1540 555 I 1553 588 I 1565 621 I 1575 655 I 1584 689 I 1584 689 I 1626 555 I 1756 555 I 1799 689 I 1880 689 I : 0.59 0.59 +S K 
; 0 0 0 1 scol 1 Lw solid N 894 106 M 894 119 I 894 120 I 893 120 I 892 120 I 892 119 I 892 106 I 892 105 I 893 105 I 894 105 I 894 106 I 894 106 I C 
894 129 M 894 142 I 894 143 I 893 143 I 892 143 I 892 142 I 892 129 I 892 128 I 893 128 I 894 128 I 894 129 I 894 129 I C 
894 152 M 894 165 I 894 165 I 893 166 I 892 165 I 892 165 I 892 152 I 892 151 I 893 151 I 894 151 I 894 152 I 894 152 I C 
894 174 M 894 187 I 894 188 I 893 189 I 892 188 I 892 187 I 892 174 I 892 174 I 893 173 I 894 174 I 894 174 I 894 174 I C 
894 197 M 894 211 I 894 211 I 893 211 I 892 211 I 892 211 I 892 197 I 892 196 I 893 196 I 894 196 I 894 197 I 894 197 I C 
894 220 M 894 233 I 894 234 I 893 234 I 892 234 I 892 233 I 892 220 I 892 219 I 893 219 I 894 219 I 894 220 I 894 220 I C 
894 243 M 894 256 I 894 257 I 893 257 I 892 257 I 892 256 I 892 243 I 892 242 I 893 242 I 894 242 I 894 243 I 894 243 I C 
894 266 M 894 279 I 894 279 I 893 280 I 892 279 I 892 279 I 892 266 I 892 265 I 893 265 I 894 265 I 894 266 I 894 266 I C 
894 288 M 894 301 I 894 302 I 893 303 I 892 302 I 892 301 I 892 288 I 892 288 I 893 287 I 894 288 I 894 288 I 894 288 I C 
894 311 M 894 324 I 894 325 I 893 325 I 892 325 I 892 324 I 892 311 I 892 310 I 893 310 I 894 310 I 894 311 I 894 311 I C 
894 334 M 894 347 I 894 348 I 893 348 I 892 348 I 892 347 I 892 334 I 892 333 I 893 333 I 894 333 I 894 334 I 894 334 I C 
894 357 M 894 370 I 894 371 I 893 371 I 892 371 I 892 370 I 892 357 I 892 356 I 893 356 I 894 356 I 894 357 I 894 357 I C 
894 380 M 894 393 I 894 393 I 893 394 I 892 393 I 892 393 I 892 380 I 892 378 I 893 378 I 894 378 I 894 380 I 894 380 I C 
894 402 M 894 415 I 894 416 I 893 416 I 892 416 I 892 415 I 892 402 I 892 402 I 893 401 I 894 402 I 894 402 I 894 402 I C 
894 425 M 894 438 I 894 439 I 893 439 I 892 439 I 892 438 I 892 425 I 892 424 I 893 424 I 894 424 I 894 425 I 894 425 I C 
894 448 M 894 461 I 894 462 I 893 462 I 892 462 I 892 461 I 892 448 I 892 447 I 893 447 I 894 447 I 894 448 I 894 448 I C 
894 470 M 894 484 I 894 485 I 893 485 I 892 485 I 892 484 I 892 470 I 892 470 I 893 470 I 894 470 I 894 470 I 894 470 I C 
894 494 M 894 507 I 894 507 I 893 508 I 892 507 I 892 507 I 892 494 I 892 492 I 893 492 I 894 492 I 894 494 I 894 494 I C 
894 516 M 894 529 I 894 530 I 893 530 I 892 530 I 892 529 I 892 516 I 892 516 I 893 515 I 894 516 I 894 516 I 894 516 I C 
894 539 M 894 552 I 894 553 I 893 553 I 892 553 I 892 552 I 892 539 I 892 538 I 893 538 I 894 538 I 894 539 I 894 539 I C 
894 562 M 894 575 I 894 576 I 893 576 I 892 576 I 892 575 I 892 562 I 892 561 I 893 561 I 894 561 I 894 562 I 894 562 I C 
894 584 M 894 598 I 894 599 I 893 599 I 892 599 I 892 598 I 892 584 I 892 584 I 893 584 I 894 584 I 894 584 I 894 584 I C 
894 608 M 894 621 I 894 621 I 893 622 I 892 621 I 892 621 I 892 608 I 892 606 I 893 606 I 894 606 I 894 608 I 894 608 I C 
894 630 M 894 643 I 894 644 I 893 644 I 892 644 I 892 643 I 892 630 I 892 630 I 893 629 I 894 630 I 894 630 I 894 630 I C 
894 653 M 894 666 I 894 667 I 893 667 I 892 667 I 892 666 I 892 653 I 892 652 I 893 652 I 894 652 I 894 653 I 894 653 I C 
894 676 M 894 689 I 894 689 I 893 690 I 892 689 I 892 689 I 892 676 I 892 675 I 893 675 I 894 675 I 894 676 I 894 676 I C 
894 698 M 894 712 I 894 713 I 893 713 I 892 713 I 892 712 I 892 698 I 892 698 I 893 698 I 894 698 I 894 698 I 894 698 I C 
894 722 M 894 735 I 894 735 I 893 736 I 892 735 I 892 735 I 892 722 I 892 720 I 893 720 I 894 720 I 894 722 I 894 722 I C 
894 744 M 894 757 I 894 758 I 893 758 I 892 758 I 892 757 I 892 744 I 892 743 I 893 743 I 894 743 I 894 744 I 894 744 I C 
894 767 M 894 780 I 894 781 I 893 781 I 892 781 I 892 780 I 892 767 I 892 766 I 893 766 I 894 766 I 894 767 I 894 767 I C 
894 790 M 894 803 I 894 803 I 893 804 I 892 803 I 892 803 I 892 790 I 892 789 I 893 789 I 894 789 I 894 790 I 894 790 I C 
894 812 M 894 826 I 894 827 I 893 827 I 892 827 I 892 826 I 892 812 I 892 812 I 893 812 I 894 812 I 894 812 I 894 812 I C 
894 835 M 894 849 I 894 849 I 893 850 I 892 849 I 892 849 I 892 835 I 892 834 I 893 834 I 894 834 I 894 835 I 894 835 I C 
894 858 M 894 871 I 894 872 I 893 872 I 892 872 I 892 871 I 892 858 I 892 857 I 893 857 I 894 857 I 894 858 I 894 858 I C 
894 881 M 894 894 I 894 895 I 893 895 I 892 895 I 892 894 I 892 881 I 892 880 I 893 880 I 894 880 I 894 881 I 894 881 I C 
894 904 M 894 917 I 894 917 I 893 918 I 892 917 I 892 917 I 892 904 I 892 903 I 893 903 I 894 903 I 894 904 I 894 904 I C 
894 926 M 894 940 I 894 941 I 893 941 I 892 941 I 892 940 I 892 926 I 892 926 I 893 926 I 894 926 I 894 926 I 894 926 I C 
894 949 M 894 962 I 894 963 I 893 964 I 892 963 I 892 962 I 892 949 I 892 948 I 893 948 I 894 948 I 894 949 I 894 949 I C 
894 972 M 894 985 I 894 986 I 893 986 I 892 986 I 892 985 I 892 972 I 892 971 I 893 971 I 894 971 I 894 972 I 894 972 I C 
894 995 M 894 1008 I 894 1009 I 893 1009 I 892 1009 I 892 1008 I 892 995 I 892 994 I 893 994 I 894 994 I 894 995 I 894 995 I C 
894 1018 M 894 1031 I 894 1031 I 893 1032 I 892 1031 I 892 1031 I 892 1018 I 892 1017 I 893 1016 I 894 1017 I 894 1018 I 894 1018 I C 
894 1040 M 894 1048 I 894 1049 I 893 1049 I 892 1049 I 892 1048 I 892 1040 I 892 1040 I 893 1040 I 894 1040 I 894 1040 I 894 1040 I C 
:  L ; K 
N 1881 106 M 1881 119 I 1881 120 I 1880 120 I 1880 120 I 1879 119 I 1879 106 I 1880 105 I 1880 105 I 1881 105 I 1881 106 I 1881 106 I C 
1881 129 M 1881 142 I 1881 143 I 1880 143 I 1880 143 I 1879 142 I 1879 129 I 1880 128 I 1880 128 I 1881 128 I 1881 129 I 1881 129 I C 
1881 152 M 1881 165 I 1880 166 I 1880 165 I 1879 165 I 1879 152 I 1880 151 I 1880 151 I 1881 151 I 1881 152 I 1881 152 I C 
1881 174 M 1881 187 I 1880 189 I 1880 189 I 1879 187 I 1879 174 I 1880 174 I 1880 173 I 1881 174 I 1881 174 I C 
1881 197 M 1881 211 I 1881 211 I 1880 211 I 1880 211 I 1879 211 I 1879 197 I 1880 196 I 1880 196 I 1881 196 I 1881 197 I 1881 197 I C 
1881 220 M 1881 233 I 1881 234 I 1880 234 I 1880 234 I 1879 233 I 1879 220 I 1880 219 I 1880 219 I 1881 219 I 1881 220 I 1881 220 I C 
1881 243 M 1881 256 I 1881 257 I 1880 257 I 1880 257 I 1879 256 I 1879 243 I 1880 242 I 1880 242 I 1881 242 I 1881 243 I 1881 243 I C 
1881 266 M 1881 279 I 1880 280 I 1880 279 I 1879 279 I 1879 266 I 1880 265 I 1880 265 I 1881 265 I 1881 266 I 1881 266 I C 
1881 288 M 1881 301 I 1880 303 I 1880 303 I 1879 301 I 1879 288 I 1880 288 I 1880 287 I 1881 288 I 1881 288 I C 
1881 311 M 1881 324 I 1881 325 I 1880 325 I 1880 325 I 1879 324 I 1879 311 I 1880 310 I 1880 310 I 1881 310 I 1881 311 I 1881 311 I C 
1881 334 M 1881 347 I 1881 348 I 1880 348 I 1880 348 I 1879 347 I 1879 334 I 1880 333 I 1880 333 I 1881 333 I 1881 334 I 1881 334 I C 
1881 357 M 1881 370 I 1881 371 I 1880 371 I 1880 371 I 1879 370 I 1879 357 I 1880 356 I 1880 356 I 1881 356 I 1881 357 I 1881 357 I C 
1881 380 M 1881 393 I 1880 394 I 1880 393 I 1879 393 I 1879 380 I 1880 378 I 1880 378 I 1881 378 I 1881 380 I 1881 380 I C 
1881 402 M 1881 415 I 1880 416 I 1880 416 I 1879 415 I 1879 402 I 1880 402 I 1880 401 I 1881 402 I 1881 402 I C 
1881 425 M 1881 438 I 1881 439 I 1880 439 I 1880 439 I 1879 438 I 1879 425 I 1880 424 I 1880 424 I 1881 424 I 1881 425 I 1881 425 I C 
1881 448 M 1881 461 I 1881 462 I 1880 462 I 1880 462 I 1879 461 I 1879 448 I 1880 447 I 1880 447 I 1881 447 I 1881 448 I 1881 448 I C 
1881 470 M 1881 484 I 1881 485 I 1880 485 I 1880 485 I 1879 484 I 1879 470 I 1880 470 I 1880 470 I 1881 470 I 1881 470 I 1881 470 I C 
1881 494 M 1881 507 I 1880 508 I 1880 507 I 1879 507 I 1879 494 I 1880 492 I 1880 492 I 1881 492 I 1881 494 I 1881 494 I C 
1881 516 M 1881 529 I 1880 530 I 1880 530 I 1879 529 I 1879 516 I 1880 516 I 1880 515 I 1881 516 I 1881 516 I C 
1881 539 M 1881 552 I 1881 553 I 1880 553 I 1880 553 I 1879 552 I 1879 539 I 1880 538 I 1880 538 I 1881 538 I 1881 539 I 1881 539 I C 
1881 562 M 1881 575 I 1881 576 I 1880 576 I 1880 576 I 1879 575 I 1879 562 I 1880 561 I 1880 561 I 1881 561 I 1881 562 I 1881 562 I C 
1881 584 M 1881 598 I 1881 599 I 1880 599 I 1880 599 I 1879 598 I 1879 584 I 1880 584 I 1880 584 I 1881 584 I 1881 584 I 1881 584 I C 
1881 608 M 1881 621 I 1880 622 I 1880 621 I 1879 621 I 1879 608 I 1880 606 I 1880 606 I 1881 606 I 1881 608 I 1881 608 I C 
1881 630 M 1881 643 I 1880 644 I 1880 644 I 1879 643 I 1879 630 I 1880 630 I 1880 629 I 1881 630 I 1881 630 I C 
1881 653 M 1881 666 I 1881 667 I 1880 667 I 1880 667 I 1879 666 I 1879 653 I 1880 652 I 1880 652 I 1881 652 I 1881 653 I 1881 653 I C 
1881 676 M 1881 689 I 1881 689 I 1880 690 I 1880 689 I 1879 689 I 1879 676 I 1880 675 I 1880 675 I 1881 675 I 1881 676 I 1881 676 I C 
1881 698 M 1881 712 I 1881 713 I 1880 713 I 1880 713 I 1879 712 I 1879 698 I 1880 698 I 1880 698 I 1881 698 I 1881 698 I 1881 698 I C 
1881 722 M 1881 735 I 1880 736 I 1880 735 I 1879 735 I 1879 722 I 1880 720 I 1880 720 I 1881 720 I 1881 722 I 1881 722 I C 
1881 744 M 1881 757 I 1880 758 I 1880 758 I 1879 757 I 1879 744 I 1880 743 I 1880 743 I 1881 744 I 1881 744 I C 
1881 767 M 1881 780 I 1881 781 I 1880 781 I 1880 781 I 1879 780 I 1879 767 I 1880 766 I 1880 766 I 1881 766 I 1881 767 I 1881 767 I C 
1881 790 M 1881 803 I 1881 803 I 1880 804 I 1880 803 I 1879 803 I 1879 790 I 1880 789 I 1880 789 I 1881 789 I 1881 790 I 1881 790 I C 
1881 812 M 1881 826 I 1881 827 I 1880 827 I 1880 827 I 1879 826 I 1879 812 I 1880 812 I 1880 812 I 1881 812 I 1881 812 I 1881 812 I C 
1881 835 M 1881 849 I 1880 850 I 1880 849 I 1879 849 I 1879 835 I 1880 834 I 1880 834 I 1881 834 I 1881 835 I 1881 835 I C 
1881 858 M 1881 871 I 1880 872 I 1880 872 I 1879 871 I 1879 858 I 1880 857 I 1880 857 I 1881 858 I 1881 858 I C 
1881 881 M 1881 894 I 1881 895 I 1880 895 I 1880 895 I 1879 894 I 1879 881 I 1880 880 I 1880 880 I 1881 880 I 1881 881 I 1881 881 I C 
1881 904 M 1881 917 I 1881 917 I 1880 918 I 1880 917 I 1879 917 I 1879 904 I 1880 903 I 1880 903 I 1881 903 I 1881 904 I 1881 904 I C 
1881 926 M 1881 940 I 1881 941 I 1880 941 I 1880 941 I 1879 940 I 1879 926 I 1880 926 I 1880 926 I 1881 926 I 1881 926 I 1881 926 I C 
1881 949 M 1881 962 I 1880 964 I 1880 963 I 1879 962 I 1879 949 I 1880 948 I 1880 948 I 1881 948 I 1881 949 I 1881 949 I C 
1881 972 M 1881 985 I 1881 986 I 1880 986 I 1880 986 I 1879 985 I 1879 972 I 1880 971 I 1880 971 I 1881 972 I 1881 972 I C 
1881 995 M 1881 1008 I 1881 1009 I 1880 1009 I 1880 1009 I 1879 1008 I 1879 995 I 1880 994 I 1880 994 I 1881 994 I 1881 995 I 1881 995 I C 
1881 1018 M 1881 1031 I 1881 1031 I 1880 1032 I 1880 1031 I 1879 1031 I 1879 1018 I 1880 1017 I 1880 1016 I 1881 1017 I 1881 1018 I 1881 1018 I C 
1881 1040 M 1881 1048 I 1881 1049 I 1880 1049 I 1880 1049 I 1879 1048 I 1879 1040 I 1880 1040 I 1880 1040 I 1881 1040 I 1881 1040 I 1881 1040 I C 
:  L ; K 
3 Lw solid N 893 218 M 1880 218 I : 0.59 0.59 +S K 
; N 915 196 M 893 218 I 915 240 I : 0.59 0.59 +S K 
; N 1858 240 M 1880 218 I 1858 196 I : 0.59 0.59 +S K 
; N 1364 180 M 1364 256 I 1403 256 I 1403 180 I 1364 180 I C 
1 1 1 1 scol  O 0 0 0 1 scol Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Helvetica
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
/Helvetica FontHasEuro not
{
/Euro.Helvetica
 [556 0 24 -19 541 703 ] 
<A3F8C00DD4E90378DA01F779D301F808D301F904DA01F899F908156CB447AD338B08FB2D
8B372B7BFB37085806724305D30644075B06724305DA06A0FB36E035F7218B08E08BCDB7
939208EE077A71405E418B083F8B4CCE84F108F76506A3D305FB8306D207F79C06A3D305
FBB10692E2B7E8F28B08E08BBE62A45A08090E>
AddEuroGlyph
/Euro /Helvetica /Helvetica-Copy BuildNewFont
} if
F /F0 0 /256 T /Helvetica mF 
/F0S3F F0 [63.5 0 0 -63.5 0 0 ] mFS
F0S3F Ji 
1367 237 M (T)S 
565 361 M (Fresh)[39 21 35 32  0]xS 
481 590 M (Aging delay)[42 35 14 35 35 18 35 35 14 35  0]xS 
1 Lw solid N 1668 241 M 1668 254 I 1668 254 I 1667 255 I 1666 254 I 1666 254 I 1666 241 I 1666 240 I 1667 240 I 1668 240 I 1668 241 I 1668 241 I C 
1668 263 M 1668 276 I 1668 277 I 1667 278 I 1666 277 I 1666 276 I 1666 263 I 1666 263 I 1667 262 I 1668 263 I 1668 263 I 1668 263 I C 
1668 286 M 1668 300 I 1668 300 I 1667 300 I 1666 300 I 1666 300 I 1666 286 I 1666 285 I 1667 285 I 1668 285 I 1668 286 I 1668 286 I C 
1668 309 M 1668 322 I 1668 323 I 1667 323 I 1666 323 I 1666 322 I 1666 309 I 1666 308 I 1667 308 I 1668 308 I 1668 309 I 1668 309 I C 
1668 332 M 1668 345 I 1668 346 I 1667 346 I 1666 346 I 1666 345 I 1666 332 I 1666 331 I 1667 331 I 1668 331 I 1668 332 I 1668 332 I C 
1668 355 M 1668 368 I 1668 368 I 1667 369 I 1666 368 I 1666 368 I 1666 355 I 1666 354 I 1667 354 I 1668 354 I 1668 355 I 1668 355 I C 
1668 377 M 1668 390 I 1668 391 I 1667 392 I 1666 391 I 1666 390 I 1666 377 I 1666 377 I 1667 376 I 1668 377 I 1668 377 I 1668 377 I C 
1668 400 M 1668 414 I 1668 414 I 1667 414 I 1666 414 I 1666 414 I 1666 400 I 1666 399 I 1667 399 I 1668 399 I 1668 400 I 1668 400 I C 
1668 423 M 1668 436 I 1668 437 I 1667 437 I 1666 437 I 1666 436 I 1666 423 I 1666 422 I 1667 422 I 1668 422 I 1668 423 I 1668 423 I C 
1668 446 M 1668 459 I 1668 460 I 1667 460 I 1666 460 I 1666 459 I 1666 446 I 1666 445 I 1667 445 I 1668 445 I 1668 446 I 1668 446 I C 
1668 469 M 1668 482 I 1668 482 I 1667 483 I 1666 482 I 1666 482 I 1666 469 I 1666 468 I 1667 468 I 1668 468 I 1668 469 I 1668 469 I C 
1668 491 M 1668 504 I 1668 505 I 1667 505 I 1666 505 I 1666 504 I 1666 491 I 1666 491 I 1667 490 I 1668 491 I 1668 491 I 1668 491 I C 
1668 514 M 1668 527 I 1668 528 I 1667 528 I 1666 528 I 1666 527 I 1666 514 I 1666 513 I 1667 513 I 1668 513 I 1668 514 I 1668 514 I C 
1668 537 M 1668 550 I 1668 551 I 1667 551 I 1666 551 I 1666 550 I 1666 537 I 1666 536 I 1667 536 I 1668 536 I 1668 537 I 1668 537 I C 
1668 560 M 1668 573 I 1668 574 I 1667 574 I 1666 574 I 1666 573 I 1666 560 I 1666 559 I 1667 559 I 1668 559 I 1668 560 I 1668 560 I C 
1668 583 M 1668 596 I 1668 596 I 1667 597 I 1666 596 I 1666 596 I 1666 583 I 1666 581 I 1667 581 I 1668 581 I 1668 583 I 1668 583 I C 
1668 605 M 1668 618 I 1668 619 I 1667 619 I 1666 619 I 1666 618 I 1666 605 I 1666 605 I 1667 604 I 1668 605 I 1668 605 I 1668 605 I C 
1668 628 M 1668 641 I 1668 642 I 1667 642 I 1666 642 I 1666 641 I 1666 628 I 1666 627 I 1667 627 I 1668 627 I 1668 628 I 1668 628 I C 
1668 651 M 1668 664 I 1668 665 I 1667 665 I 1666 665 I 1666 664 I 1666 651 I 1666 650 I 1667 650 I 1668 650 I 1668 651 I 1668 651 I C 
1668 673 M 1668 687 I 1668 688 I 1667 688 I 1666 688 I 1666 687 I 1666 673 I 1666 673 I 1667 673 I 1668 673 I 1668 673 I 1668 673 I C 
1668 697 M 1668 710 I 1668 710 I 1667 711 I 1666 710 I 1666 710 I 1666 697 I 1666 695 I 1667 695 I 1668 695 I 1668 697 I 1668 697 I C 
1668 719 M 1668 732 I 1668 733 I 1667 733 I 1666 733 I 1666 732 I 1666 719 I 1666 719 I 1667 718 I 1668 719 I 1668 719 I 1668 719 I C 
1668 742 M 1668 755 I 1668 756 I 1667 756 I 1666 756 I 1666 755 I 1666 742 I 1666 741 I 1667 741 I 1668 741 I 1668 742 I 1668 742 I C 
1668 765 M 1668 778 I 1668 778 I 1667 779 I 1666 778 I 1666 778 I 1666 765 I 1666 764 I 1667 764 I 1668 764 I 1668 765 I 1668 765 I C 
:  L ; K 
N 1780 532 M 1780 545 I 1780 546 I 1779 546 I 1778 546 I 1778 545 I 1778 532 I 1778 532 I 1779 531 I 1780 532 I 1780 532 I 1780 532 I C 
1780 555 M 1780 568 I 1780 569 I 1779 569 I 1778 569 I 1778 568 I 1778 555 I 1778 554 I 1779 554 I 1780 554 I 1780 555 I 1780 555 I C 
1780 578 M 1780 591 I 1780 592 I 1779 592 I 1778 592 I 1778 591 I 1778 578 I 1778 577 I 1779 577 I 1780 577 I 1780 578 I 1780 578 I C 
1780 600 M 1780 614 I 1780 615 I 1779 615 I 1778 615 I 1778 614 I 1778 600 I 1778 600 I 1779 600 I 1780 600 I 1780 600 I 1780 600 I C 
1780 624 M 1780 637 I 1780 637 I 1779 638 I 1778 637 I 1778 637 I 1778 624 I 1778 622 I 1779 622 I 1780 622 I 1780 624 I 1780 624 I C 
1780 646 M 1780 659 I 1780 660 I 1779 660 I 1778 660 I 1778 659 I 1778 646 I 1778 646 I 1779 645 I 1780 646 I 1780 646 I 1780 646 I C 
1780 669 M 1780 682 I 1780 683 I 1779 683 I 1778 683 I 1778 682 I 1778 669 I 1778 668 I 1779 668 I 1780 668 I 1780 669 I 1780 669 I C 
1780 692 M 1780 705 I 1780 706 I 1779 706 I 1778 706 I 1778 705 I 1778 692 I 1778 691 I 1779 691 I 1780 691 I 1780 692 I 1780 692 I C 
1780 714 M 1780 728 I 1780 729 I 1779 729 I 1778 729 I 1778 728 I 1778 714 I 1778 714 I 1779 714 I 1780 714 I 1780 714 I 1780 714 I C 
1780 738 M 1780 751 I 1780 751 I 1779 752 I 1778 751 I 1778 751 I 1778 738 I 1778 736 I 1779 736 I 1780 736 I 1780 738 I 1780 738 I C 
1780 760 M 1780 773 I 1780 774 I 1779 774 I 1778 774 I 1778 773 I 1778 760 I 1778 760 I 1779 759 I 1780 760 I 1780 760 I 1780 760 I C 
:  L ; K 
3 Lw solid N 1667 734 M 1779 734 I : 0.59 0.59 +S K 
; N 1689 712 M 1667 734 I 1689 756 I : 0.59 0.59 +S K 
; N 1757 756 M 1779 734 I 1757 712 I : 0.59 0.59 +S K 
; 1706 701 M (T)S 
1 Lw solid N 1724 106 M 1724 119 I 1724 120 I 1723 120 I 1722 120 I 1722 119 I 1722 106 I 1722 105 I 1723 105 I 1724 105 I 1724 106 I 1724 106 I C 
1724 129 M 1724 142 I 1724 143 I 1723 143 I 1722 143 I 1722 142 I 1722 129 I 1722 128 I 1723 128 I 1724 128 I 1724 129 I 1724 129 I C 
1724 152 M 1724 165 I 1724 165 I 1723 166 I 1722 165 I 1722 165 I 1722 152 I 1722 151 I 1723 151 I 1724 151 I 1724 152 I 1724 152 I C 
1724 174 M 1724 187 I 1724 189 I 1723 189 I 1722 189 I 1722 187 I 1722 174 I 1722 174 I 1723 173 I 1724 174 I 1724 174 I 1724 174 I C 
1724 197 M 1724 211 I 1724 211 I 1723 211 I 1722 211 I 1722 211 I 1722 197 I 1722 196 I 1723 196 I 1724 196 I 1724 197 I 1724 197 I C 
1724 220 M 1724 233 I 1724 234 I 1723 234 I 1722 234 I 1722 233 I 1722 220 I 1722 219 I 1723 219 I 1724 219 I 1724 220 I 1724 220 I C 
1724 243 M 1724 256 I 1724 257 I 1723 257 I 1722 257 I 1722 256 I 1722 243 I 1722 242 I 1723 242 I 1724 242 I 1724 243 I 1724 243 I C 
1724 266 M 1724 279 I 1724 279 I 1723 280 I 1722 279 I 1722 279 I 1722 266 I 1722 265 I 1723 265 I 1724 265 I 1724 266 I 1724 266 I C 
1724 288 M 1724 301 I 1724 303 I 1723 303 I 1722 303 I 1722 301 I 1722 288 I 1722 288 I 1723 287 I 1724 288 I 1724 288 I 1724 288 I C 
1724 311 M 1724 324 I 1724 325 I 1723 325 I 1722 325 I 1722 324 I 1722 311 I 1722 310 I 1723 310 I 1724 310 I 1724 311 I 1724 311 I C 
1724 334 M 1724 347 I 1724 348 I 1723 348 I 1722 348 I 1722 347 I 1722 334 I 1722 333 I 1723 333 I 1724 333 I 1724 334 I 1724 334 I C 
1724 357 M 1724 370 I 1724 371 I 1723 371 I 1722 371 I 1722 370 I 1722 357 I 1722 356 I 1723 356 I 1724 356 I 1724 357 I 1724 357 I C 
1724 380 M 1724 393 I 1724 393 I 1723 394 I 1722 393 I 1722 393 I 1722 380 I 1722 378 I 1723 378 I 1724 378 I 1724 380 I 1724 380 I C 
1724 402 M 1724 415 I 1724 416 I 1723 416 I 1722 416 I 1722 415 I 1722 402 I 1722 402 I 1723 401 I 1724 402 I 1724 402 I 1724 402 I C 
1724 425 M 1724 438 I 1724 439 I 1723 439 I 1722 439 I 1722 438 I 1722 425 I 1722 424 I 1723 424 I 1724 424 I 1724 425 I 1724 425 I C 
1724 448 M 1724 461 I 1724 462 I 1723 462 I 1722 462 I 1722 461 I 1722 448 I 1722 447 I 1723 447 I 1724 447 I 1724 448 I 1724 448 I C 
1724 470 M 1724 484 I 1724 485 I 1723 485 I 1722 485 I 1722 484 I 1722 470 I 1722 470 I 1723 470 I 1724 470 I 1724 470 I 1724 470 I C 
1724 494 M 1724 507 I 1724 507 I 1723 508 I 1722 507 I 1722 507 I 1722 494 I 1722 492 I 1723 492 I 1724 492 I 1724 494 I 1724 494 I C 
1724 516 M 1724 529 I 1724 530 I 1723 530 I 1722 530 I 1722 529 I 1722 516 I 1722 516 I 1723 515 I 1724 516 I 1724 516 I 1724 516 I C 
1724 539 M 1724 552 I 1724 553 I 1723 553 I 1722 553 I 1722 552 I 1722 539 I 1722 538 I 1723 538 I 1724 538 I 1724 539 I 1724 539 I C 
1724 562 M 1724 575 I 1724 576 I 1723 576 I 1722 576 I 1722 575 I 1722 562 I 1722 561 I 1723 561 I 1724 561 I 1724 562 I 1724 562 I C 
1724 584 M 1724 598 I 1724 599 I 1723 599 I 1722 599 I 1722 598 I 1722 584 I 1722 584 I 1723 584 I 1724 584 I 1724 584 I 1724 584 I C 
:  L ; K 
1410 76 M (Guard band)[49 35 35 21 35 18 35 35 35  0]xS 
1339 820 M (Aging delay)[42 35 14 35 35 18 35 35 15 35  0]xS 
3 Lw solid N 1678 826 M 1703 774 I : 0.59 0.59 +S K 
; N 1687 770 M 1723 734 I 1716 784 I 1687 770 I C 
 O N 1762 38 M 1779 108 I : 0.59 0.59 +S K 
; N 1794 100 M 1790 151 I 1763 108 I 1794 100 I C 
 O N 1723 151 M 1880 151 I : 0.59 0.59 +S K 
; N 1745 129 M 1723 151 I 1745 173 I : 0.59 0.59 +S K 
; N 1858 173 M 1880 151 I 1858 129 I : 0.59 0.59 +S K 
; 1967 532 M (Stability violation in guard band)[43 17 35 35 15 14 14 18 31 18 32 14 35 14 35 18 14 35 35 18 14 35 18 35 35 35 22 35 17 35 35 35
 0]xS 
2844 532 M (,)S 
1967 613 M (is NOT)[15 31 18 46 49  0]xS 
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_T3Hdr 5.0 0
{version cvi 2016 ge{32/FontType resourcestatus{pop pop true}{false}ifelse}
{false}ifelse}exec/Is2016andT32? exch def/T32DefSBCMap{/CIDInit/ProcSet
findresource begin 10 dict begin begincmap/CIDSystemInfo 3 dict dup begin
/Registry(Adobe)def/Ordering(Identity1)def/Supplement 0 def end def/CMapType 0
def/WMode 0 def 1 begincodespacerange<00><ff>endcodespacerange 1 begincidrange
<00><ff>0 endcidrange endcmap/DrvSBCMap currentdict/CMap defineresource pop end
end}bind def Is2016andT32?{T32DefSBCMap}def/T32RsrcBegin{Is2016andT32?{
/BitmapFontInit/ProcSet findresource begin}if}bind def/T32RsrcEnd{Is2016andT32?
{end}if}bind def/AddT32Char{6 1 roll 0 get 7 1 roll pop pop 5 1 roll pop
findfont/TT32R get addglyph}bind def/AddT3Char{findfont dup 5 2 roll 1 index
length 0 gt{cvx 1 index exch 4 exch put dup(imagemask)cvx cvn 5 exch put cvx}
{pop cvx}ifelse 3 -1 roll/CharProcs get 3 1 roll put dup/Encoding get 5 -1 roll
4 index put/Metrics get 3 1 roll put}bind def/AddT3T32Char Is2016andT32?{
/AddT32Char}{/AddT3Char}ifelse load def/GreNewFontT32{5 dict begin exch
/FontMatrix exch def exch/FontBBox exch def exch pop exch pop/CIDFontType 4 def
dup currentdict end/CIDFont defineresource 3 -1 roll dup/DrvSBCMap dup/CMap
resourcestatus{pop pop}{T32DefSBCMap}ifelse 5 -1 roll[exch]composefont dup
length dict copy dup/FID undef begin exch/TT32R exch def currentdict end
definefont/BitmapFontInit/ProcSet findresource begin/TT32R get[14 0 0 0 0 0]<>0
4 -1 roll addglyph end}bind def/GreNewFontT3{11 dict begin pop/FontType 3 def
/FontMatrix exch def/FontBBox exch def/Encoding exch def/CharProcs 257 dict def
CharProcs/.notdef{}put/Metrics 257 dict def Metrics/.notdef 3 -1 roll put
AddFontInfoBegin AddFontInfo AddFontInfoEnd/BuildChar{userdict begin/char exch
def dup/charname exch/Encoding get char get def dup/Metrics get charname 2 copy
known{get aload pop}{pop/.notdef get aload pop}ifelse setcachedevice begin
Encoding char get CharProcs exch 2 copy known{get}{pop/.notdef get}ifelse end
exec end}def currentdict end definefont pop}bind def/GreNewFont{Is2016andT32?
{GreNewFontT32}{GreNewFontT3}ifelse}bind def/UDF3{Is2016andT32?{/BitmapFontInit
/ProcSet findresource begin dup/CIDFont findresource removeall/CIDFont
undefineresource undefinefont end}{pop UDF}ifelse}bind def
%%EndResource
end reinitialize
/TT1E92b00
[63 0 0 0 0 0 ] 
 256 array 0 1 255 {1 index exch /.notdef put} for 
[0 0 0 0 ] 
[1 63 div 0 0 -1 63 div 0 0 ]
/__TT1E92b00
GreNewFont
T32RsrcBegin

1
/g256 [64 0 29 -49 56 -29 ] 
/g256 [27 20 true [1 0 0 1 -29 49 ]  0 0]
[<~!!iQi!&+Dg!+5nZ!Pem>"+Ud[#65_D%KJHg%KLGJ*!#I.494:>3!%q;56:NZ
It@S!J&2*aJ&D6cJ&2-bJ&2*a5Cre6*ru3="op=W~>
 ]
/TT1E92b00 AddT3T32Char
T32RsrcEnd
Is2016andT32? not {
 /TT1E92b00 /Font G2UBegin
/g256 <201C> def
G2UEnd
} if
F /F1 0 /0 F /TT1E92b00 mF 
/F1S3F F1 [63.539 0 0 -63.539 0 0 ] mFS
F1S3F Ji 
2164 613 M <01>S 
F0S3F Ji 
2228 613 M (timing violation)[18 14 53 14 35 35 18 31 15 35 14 35 18 14 35  0]xS 
T32RsrcBegin

2
/g257 [64 0 8 -49 34 -29 ] 
/g257 [26 20 true [1 0 0 1 -8 49 ]  0 0]
[<~z#J`M'&)_p;&+G(!&+G(!&+G(!&+G(!&+G(!#Ojs.!8n(^!8n(^!Pf0F!ItRY
"+V?k#66^`%KLGJ*!"ms(]_>O+9;HB5QUoc~>
 ]
/TT1E92b00 AddT3T32Char
T32RsrcEnd
Is2016andT32? not {
 /TT1E92b00 /Font G2UBegin
/g257 <201D> def
G2UEnd
} if
F1S3F Ji 
2646 613 M <02>S 
N 1810 611 M 1806 599 I 1801 589 I 1795 580 I 1789 573 I 1782 567 I 1775 563 I 1767 561 I 1763 561 I 1760 562 I 1753 565 I 1748 570 I 1744 577 I 1740 586 I 1738 595 I 1738 606 I 1739 617 I 1741 629 I 1745 640 I 1750 651 I 1756 660 I 1762 668 I 1769 673 I 1776 677 I 1784 678 I 1788 678 I 1791 678 I 1798 675 I 1803 670 I 1808 663 I 1811 654 I 1813 644 I 1813 634 I 1812 622 I 1810 611 I : 0.59 0.59 +S K 
; N 1856 598 M 1947 577 I : 0.59 0.59 +S K 
; N 1864 613 M 1813 608 I 1857 581 I 1864 613 I C 
 O N 1695 665 M 1678 691 I 1705 691 I 1695 665 I C 
: 0.59 0.59 +S K 
; 0.5 0.5 0.5 1 scol 16 Lw N 893 880 M 1404 880 I 1404 880 I 1419 913 I 1432 947 I 1444 981 I 1456 1015 I 1456 1015 I 1507 880 I 1558 1015 I 1609 880 I 1635 881 I 1660 880 I 1660 880 I 1676 913 I 1690 946 I 1702 980 I 1712 1015 I 1712 1015 I 1763 880 I 1916 880 I 1967 1015 I 2105 1015 I : 0.59 0.59 +S K 
; 0 0 0 1 scol F0S3F Ji 
520 916 M (Delay fault)[45 35 14 35 32 18 18 35 35 14  0]xS 
3 Lw N 1966 935 M 1963 924 I 1957 914 I 1952 904 I 1946 897 I 1938 891 I 1931 888 I 1924 886 I 1920 886 I 1916 887 I 1910 889 I 1905 895 I 1900 902 I 1897 910 I 1895 920 I 1894 930 I 1896 942 I 1898 954 I 1902 965 I 1907 976 I 1912 984 I 1919 992 I 1926 997 I 1933 1002 I 1941 1003 I 1944 1003 I 1948 1002 I 1954 999 I 1960 995 I 1964 987 I 1967 979 I 1969 970 I 1970 959 I 1969 947 I 1966 935 I : 0.59 0.59 +S K 
; N 1960 878 M 2023 822 I : 0.59 0.59 +S K 
; N 1973 888 M 1927 908 I 1952 864 I 1973 888 I C 
 O N 1880 106 M 1880 285 I 2093 285 I 2093 106 I 1880 106 I C 
0.59 0.59 0.59 1 scol  O 0 0 0 1 scol N 1880 151 M 2093 151 I : 0.59 0.59 +S K 
; N 1902 129 M 1880 151 I 1902 173 I : 0.59 0.59 +S K 
; N 2071 173 M 2093 151 I 2071 129 I : 0.59 0.59 +S K 
; 2024 88 M (Detection slack)[46 35 18 35 31 18 14 36 35 17 32 14 35 31  0]xS 
N 2009 53 M 1979 111 I : 0.59 0.59 +S K 
; N 1995 115 M 1959 151 I 1966 100 I 1995 115 I C 
 O 2013 813 M (S)S 
2055 813 M (t)S  2073 813 M (a)S  2108 813 M (b)S  2143 813 M (i)S  2157 813 M (l)S  2171 813 M (i)S  2185 813 M (t)S  2203 813 M (y)S  2235 813 M ( )S  2252 813 M (v)S  2284 813 M (i)S  2298 813 M (o)S  2333 813 M (l)S  2347 813 M (a)S  2382 813 M (t)S  2400 813 M (i)S 
2414 813 M (o)S  2449 813 M (n)S  2484 813 M ( )S  2502 813 M (i)S  2516 813 M (n)S  2551 813 M ( )S  2569 813 M (d)S  2604 813 M (e)S  2639 813 M (t)S  2657 813 M (e)S  2692 813 M (c)S  2724 813 M (t)S  2741 813 M (i)S  2756 813 M (o)S  2791 813 M (n)S  2826 813 M ( )S 
2843 813 M (s)S  2875 813 M (l)S  2889 813 M (a)S  2924 813 M (c)S  2956 813 M (k)S  
2987 813 M (,)S 
3005 813 M ( )S  
2013 894 M (is)[14  0]xS 
F1S3F Ji 
2058 894 M <01>S 
F0S3F Ji 
2122 894 M (timing violation)[18 14 53 14 35 35 18 31 14 35 15 35 17 15 35  0]xS 
F1S3F Ji 
2540 894 M <02>S 
T32RsrcBegin

3
/g252 [64 0 0 -24 64 -22 ] 
/g252 [64 2 true [1 0 0 1 0 24 ]  0 0]
[<~s8W-!s8W-!s8W-!s8W-!~>
 ]
/TT1E92b00 AddT3T32Char
T32RsrcEnd
Is2016andT32? not {
 /TT1E92b00 /Font G2UBegin
/g252 <2014> def
G2UEnd
} if
2604 894 M <0303>[63  0]xS 
F0S3F Ji 
2730 894 M (D)S 
2776 894 M (e)S  2811 894 M (l)S  2825 894 M (a)S  2860 894 M (y)S  2891 894 M ( )S  2909 894 M (f)S  2927 894 M (a)S  2962 894 M (u)S  2997 894 M (l)S  3011 894 M (t)S  
LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%+ font Helvetica
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
%%+ procset Pscript_T3Hdr 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
