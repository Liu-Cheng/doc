%!PS-Adobe-3.0 EPSF-3.0
%%Title: WMF2EPS 1.32  : WMF->EPS conversion for curve.wmf
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 7/13/2010 11:34:39
%%For: Administrator
%%BoundingBox: 56 56 450 230
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (WMF2EPS Color PS) (2010.0) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 0 0 450 230
%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman[/STSong-Light--GBK-EUC-H
dup{findfont}stopped{cleartomark}{/FontName get eq{pop cleartomark[
<b8c3cec4bcfed0e8d2aad3c3b5c4c4dab4e6ccabb6e0a1a3c4fabfc9d2d4cad4d3c3c8e7cfc2b5
c4b7bdb7a8d4d9b4f2d3a1a3ba>100 500<d4daa1b0506f7374536372697074a1b1b6d4bbb0bf
f2a3acd1a1d4f1a1b0506f7374536372697074a3a8b6d4b1e3d0afcabd41445343b5c4d3c5bbafa
3a9a1b1a1a3>115 485<d4daa1b0c9e8b1b8d1a1cfeea1b1b6d4bbb0bff2a3aca1b0bfc9d3c3b
4f2d3a1bbfac4dab4e6a1b1b5c4d6b5cac7beabc8b7b5c4a1a3>115 470<d4dacec4bcfed6d0c
9d9d3c3bcb8d6d6d7d6cce5a1a3>115 455<b5a5b6c0b4f2d3a1b8c3cec4bcfeb5c4b2bbcdacb
2bfb7d6bbf2d2b3a1a3>115 440 10 0/STSong-Light--GBK-EUC-H}{cleartomark}ifelse}
ifelse showpage(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}
bind def end version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get
def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 0 229.88977 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 0 0 450 230
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b
%%EndResource
end reinitialize
0 0 0 1 scol 1 Lj 1 Lc 16 Lw solid N 642 90 M 642 1128 I 3544 1128 I : 0.594 0.59 +S K 
; N 613 97 M 642 9 I 672 97 I 613 97 I C 
 O N 3537 1098 M 3625 1128 I 3537 1157 I 3537 1098 I C 
 O Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Helvetica
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
/Helvetica FontHasEuro not
{
/Euro.Helvetica
 [556 0 24 -19 541 703 ] 
<A3F8C00DD4E90378DA01F779D301F808D301F904DA01F899F908156CB447AD338B08FB2D
8B372B7BFB37085806724305D30644075B06724305DA06A0FB36E035F7218B08E08BCDB7
939208EE077A71405E418B083F8B4CCE84F108F76506A3D305FB8306D207F79C06A3D305
FBB10692E2B7E8F28B08E08BBE62A45A08090E>
AddEuroGlyph
/Euro /Helvetica /Helvetica-Copy BuildNewFont
} if
F /F0 0 /256 T /Helvetica mF 
/F0S00IFFFFFFA1 F0 [0 -94.727 -94.727 0 0 0 ] mFS
F0S00IFFFFFFA1 Ji 
581 588 M (F)S 
581 530 M (a)S 
581 477 M (i)S 
581 456 M (l)S 
581 435 M (u)S 
581 382 M (r)S 
581 351 M (e)S 
581 298 M ( )S 
581 272 M (R)S 
581 204 M (a)S 
581 151 M (t)S 
581 124 M (e)S 
1 Lw solid N 1002 143 M 1002 156 I 1002 157 I 1001 158 I 1001 157 I 1000 156 I 1000 143 I 1001 143 I 1001 142 I 1002 143 I 1002 143 I 1002 143 I C 
1002 166 M 1002 179 I 1002 180 I 1001 180 I 1001 180 I 1000 179 I 1000 166 I 1001 165 I 1001 165 I 1002 165 I 1002 166 I 1002 166 I C 
1002 189 M 1002 202 I 1002 203 I 1001 203 I 1001 203 I 1000 202 I 1000 189 I 1001 188 I 1001 188 I 1002 188 I 1002 189 I 1002 189 I C 
1002 211 M 1002 224 I 1002 226 I 1001 226 I 1001 226 I 1000 224 I 1000 211 I 1001 211 I 1001 210 I 1002 211 I 1002 211 I 1002 211 I C 
1002 234 M 1002 248 I 1002 248 I 1001 248 I 1001 248 I 1000 248 I 1000 234 I 1001 233 I 1001 233 I 1002 233 I 1002 234 I 1002 234 I C 
1002 257 M 1002 270 I 1002 271 I 1001 271 I 1001 271 I 1000 270 I 1000 257 I 1001 256 I 1001 256 I 1002 256 I 1002 257 I 1002 257 I C 
1002 279 M 1002 293 I 1002 294 I 1001 294 I 1001 294 I 1000 293 I 1000 279 I 1001 279 I 1001 279 I 1002 279 I 1002 279 I 1002 279 I C 
1002 303 M 1002 316 I 1002 316 I 1001 317 I 1001 316 I 1000 316 I 1000 303 I 1001 302 I 1001 301 I 1002 302 I 1002 303 I 1002 303 I C 
1002 325 M 1002 338 I 1002 339 I 1001 339 I 1001 339 I 1000 338 I 1000 325 I 1001 324 I 1001 324 I 1002 324 I 1002 325 I 1002 325 I C 
1002 348 M 1002 361 I 1002 362 I 1001 362 I 1001 362 I 1000 361 I 1000 348 I 1001 347 I 1001 347 I 1002 347 I 1002 348 I 1002 348 I C 
1002 371 M 1002 384 I 1002 384 I 1001 385 I 1001 384 I 1000 384 I 1000 371 I 1001 370 I 1001 369 I 1002 370 I 1002 371 I 1002 371 I C 
1002 393 M 1002 407 I 1002 407 I 1001 407 I 1001 407 I 1000 407 I 1000 393 I 1001 393 I 1001 393 I 1002 393 I 1002 393 I 1002 393 I C 
1002 416 M 1002 429 I 1002 430 I 1001 430 I 1001 430 I 1000 429 I 1000 416 I 1001 416 I 1001 415 I 1002 416 I 1002 416 I 1002 416 I C 
1002 439 M 1002 452 I 1002 453 I 1001 453 I 1001 453 I 1000 452 I 1000 439 I 1001 438 I 1001 438 I 1002 438 I 1002 439 I 1002 439 I C 
1002 461 M 1002 475 I 1002 475 I 1001 475 I 1001 475 I 1000 475 I 1000 461 I 1001 461 I 1001 461 I 1002 461 I 1002 461 I 1002 461 I C 
1002 484 M 1002 497 I 1002 498 I 1001 499 I 1001 498 I 1000 497 I 1000 484 I 1001 484 I 1001 483 I 1002 484 I 1002 484 I 1002 484 I C 
1002 507 M 1002 520 I 1002 521 I 1001 521 I 1001 521 I 1000 520 I 1000 507 I 1001 506 I 1001 506 I 1002 506 I 1002 507 I 1002 507 I C 
1002 530 M 1002 543 I 1002 544 I 1001 544 I 1001 544 I 1000 543 I 1000 530 I 1001 529 I 1001 529 I 1002 529 I 1002 530 I 1002 530 I C 
1002 552 M 1002 565 I 1002 567 I 1001 567 I 1001 567 I 1000 565 I 1000 552 I 1001 552 I 1001 551 I 1002 552 I 1002 552 I 1002 552 I C 
1002 575 M 1002 589 I 1002 589 I 1001 589 I 1001 589 I 1000 589 I 1000 575 I 1001 574 I 1001 574 I 1002 574 I 1002 575 I 1002 575 I C 
1002 598 M 1002 611 I 1002 612 I 1001 612 I 1001 612 I 1000 611 I 1000 598 I 1001 597 I 1001 597 I 1002 597 I 1002 598 I 1002 598 I C 
1002 620 M 1002 634 I 1002 635 I 1001 635 I 1001 635 I 1000 634 I 1000 620 I 1001 620 I 1001 620 I 1002 620 I 1002 620 I 1002 620 I C 
1002 644 M 1002 657 I 1002 657 I 1001 658 I 1001 657 I 1000 657 I 1000 644 I 1001 643 I 1001 642 I 1002 643 I 1002 644 I 1002 644 I C 
1002 666 M 1002 679 I 1002 680 I 1001 680 I 1001 680 I 1000 679 I 1000 666 I 1001 665 I 1001 665 I 1002 665 I 1002 666 I 1002 666 I C 
1002 689 M 1002 702 I 1002 703 I 1001 703 I 1001 703 I 1000 702 I 1000 689 I 1001 688 I 1001 688 I 1002 688 I 1002 689 I 1002 689 I C 
1002 712 M 1002 725 I 1002 725 I 1001 726 I 1001 725 I 1000 725 I 1000 712 I 1001 711 I 1001 710 I 1002 711 I 1002 712 I 1002 712 I C 
1002 734 M 1002 748 I 1002 748 I 1001 748 I 1001 748 I 1000 748 I 1000 734 I 1001 734 I 1001 734 I 1002 734 I 1002 734 I 1002 734 I C 
1002 757 M 1002 770 I 1002 771 I 1001 771 I 1001 771 I 1000 770 I 1000 757 I 1001 757 I 1001 756 I 1002 757 I 1002 757 I 1002 757 I C 
1002 780 M 1002 793 I 1002 794 I 1001 794 I 1001 794 I 1000 793 I 1000 780 I 1001 779 I 1001 779 I 1002 779 I 1002 780 I 1002 780 I C 
1002 802 M 1002 816 I 1002 816 I 1001 816 I 1001 816 I 1000 816 I 1000 802 I 1001 802 I 1001 802 I 1002 802 I 1002 802 I 1002 802 I C 
1002 825 M 1002 838 I 1002 839 I 1001 840 I 1001 839 I 1000 838 I 1000 825 I 1001 825 I 1001 824 I 1002 825 I 1002 825 I 1002 825 I C 
1002 848 M 1002 861 I 1002 862 I 1001 862 I 1001 862 I 1000 861 I 1000 848 I 1001 847 I 1001 847 I 1002 847 I 1002 848 I 1002 848 I C 
1002 871 M 1002 884 I 1002 885 I 1001 885 I 1001 885 I 1000 884 I 1000 871 I 1001 870 I 1001 870 I 1002 870 I 1002 871 I 1002 871 I C 
1002 893 M 1002 906 I 1002 908 I 1001 908 I 1001 908 I 1000 906 I 1000 893 I 1001 893 I 1001 892 I 1002 893 I 1002 893 I 1002 893 I C 
1002 916 M 1002 930 I 1002 930 I 1001 930 I 1001 930 I 1000 930 I 1000 916 I 1001 915 I 1001 915 I 1002 915 I 1002 916 I 1002 916 I C 
1002 939 M 1002 952 I 1002 953 I 1001 953 I 1001 953 I 1000 952 I 1000 939 I 1001 938 I 1001 938 I 1002 938 I 1002 939 I 1002 939 I C 
1002 962 M 1002 975 I 1002 976 I 1001 976 I 1001 976 I 1000 975 I 1000 962 I 1001 961 I 1001 961 I 1002 961 I 1002 962 I 1002 962 I C 
1002 985 M 1002 998 I 1002 998 I 1001 999 I 1001 998 I 1000 998 I 1000 985 I 1001 984 I 1001 983 I 1002 984 I 1002 985 I 1002 985 I C 
1002 1007 M 1002 1020 I 1002 1021 I 1001 1021 I 1001 1021 I 1000 1020 I 1000 1007 I 1001 1007 I 1001 1006 I 1002 1007 I 1002 1007 I 1002 1007 I C 
1002 1030 M 1002 1043 I 1002 1044 I 1001 1044 I 1001 1044 I 1000 1043 I 1000 1030 I 1001 1029 I 1001 1029 I 1002 1029 I 1002 1030 I 1002 1030 I C 
1002 1053 M 1002 1066 I 1002 1066 I 1001 1067 I 1001 1066 I 1000 1066 I 1000 1053 I 1001 1052 I 1001 1052 I 1002 1052 I 1002 1053 I 1002 1053 I C 
1002 1075 M 1002 1089 I 1002 1089 I 1001 1089 I 1001 1089 I 1000 1089 I 1000 1075 I 1001 1075 I 1001 1075 I 1002 1075 I 1002 1075 I 1002 1075 I C 
1002 1098 M 1002 1111 I 1002 1112 I 1001 1112 I 1001 1112 I 1000 1111 I 1000 1098 I 1001 1098 I 1001 1097 I 1002 1098 I 1002 1098 I 1002 1098 I C 
1002 1121 M 1002 1134 I 1002 1135 I 1001 1135 I 1001 1135 I 1000 1134 I 1000 1121 I 1001 1120 I 1001 1120 I 1002 1120 I 1002 1121 I 1002 1121 I C 
1002 1143 M 1002 1157 I 1002 1157 I 1001 1157 I 1001 1157 I 1000 1157 I 1000 1143 I 1001 1143 I 1001 1143 I 1002 1143 I 1002 1143 I 1002 1143 I C 
1002 1166 M 1002 1179 I 1002 1180 I 1001 1181 I 1001 1180 I 1000 1179 I 1000 1166 I 1001 1166 I 1001 1165 I 1002 1166 I 1002 1166 I 1002 1166 I C 
1002 1189 M 1002 1202 I 1002 1203 I 1001 1203 I 1001 1203 I 1000 1202 I 1000 1189 I 1001 1188 I 1001 1188 I 1002 1188 I 1002 1189 I 1002 1189 I C 
1002 1212 M 1002 1225 I 1002 1226 I 1001 1226 I 1001 1226 I 1000 1225 I 1000 1212 I 1001 1211 I 1001 1211 I 1002 1211 I 1002 1212 I 1002 1212 I C 
1002 1234 M 1002 1247 I 1002 1249 I 1001 1249 I 1001 1249 I 1000 1247 I 1000 1234 I 1001 1234 I 1001 1233 I 1002 1234 I 1002 1234 I 1002 1234 I C 
1002 1257 M 1002 1271 I 1002 1271 I 1001 1271 I 1001 1271 I 1000 1271 I 1000 1257 I 1001 1256 I 1001 1256 I 1002 1256 I 1002 1257 I 1002 1257 I C 
1002 1280 M 1002 1293 I 1002 1294 I 1001 1294 I 1001 1294 I 1000 1293 I 1000 1280 I 1001 1279 I 1001 1279 I 1002 1279 I 1002 1280 I 1002 1280 I C 
1002 1303 M 1002 1316 I 1002 1317 I 1001 1317 I 1001 1317 I 1000 1316 I 1000 1303 I 1001 1302 I 1001 1302 I 1002 1302 I 1002 1303 I 1002 1303 I C 
1002 1326 M 1002 1339 I 1002 1339 I 1001 1340 I 1001 1339 I 1000 1339 I 1000 1326 I 1001 1325 I 1001 1324 I 1002 1325 I 1002 1326 I 1002 1326 I C 
1002 1348 M 1002 1361 I 1002 1362 I 1001 1362 I 1001 1362 I 1000 1361 I 1000 1348 I 1001 1348 I 1001 1347 I 1002 1348 I 1002 1348 I 1002 1348 I C 
1002 1371 M 1002 1384 I 1002 1385 I 1001 1385 I 1001 1385 I 1000 1384 I 1000 1371 I 1001 1370 I 1001 1370 I 1002 1370 I 1002 1371 I 1002 1371 I C 
1002 1394 M 1002 1400 I 1002 1401 I 1001 1401 I 1001 1401 I 1000 1400 I 1000 1394 I 1001 1393 I 1001 1393 I 1002 1393 I 1002 1394 I 1002 1394 I C 
:  L ; K 
N 2663 98 M 2663 112 I 2663 113 I 2662 113 I 2661 113 I 2661 112 I 2661 98 I 2661 98 I 2662 98 I 2663 98 I 2663 98 I 2663 98 I C 
2663 121 M 2663 134 I 2663 135 I 2662 136 I 2661 135 I 2661 134 I 2661 121 I 2661 121 I 2662 120 I 2663 121 I 2663 121 I 2663 121 I C 
2663 144 M 2663 158 I 2662 158 I 2661 158 I 2661 144 I 2662 143 I 2663 144 I 2663 144 I C 
2663 167 M 2663 180 I 2663 181 I 2662 181 I 2661 181 I 2661 180 I 2661 167 I 2662 166 I 2663 167 I 2663 167 I C 
2663 189 M 2663 203 I 2663 203 I 2662 204 I 2661 203 I 2661 203 I 2661 189 I 2661 189 I 2662 188 I 2663 189 I 2663 189 I 2663 189 I C 
2663 212 M 2663 226 I 2663 226 I 2662 226 I 2661 226 I 2661 226 I 2661 212 I 2661 211 I 2662 211 I 2663 211 I 2663 212 I 2663 212 I C 
2663 235 M 2663 248 I 2663 249 I 2662 249 I 2661 249 I 2661 248 I 2661 235 I 2661 234 I 2662 234 I 2663 234 I 2663 235 I 2663 235 I C 
2663 258 M 2663 271 I 2662 272 I 2661 271 I 2661 258 I 2662 257 I 2663 258 I 2663 258 I C 
2663 281 M 2663 294 I 2663 294 I 2662 295 I 2661 294 I 2661 294 I 2661 281 I 2662 279 I 2663 281 I 2663 281 I C 
2663 303 M 2663 316 I 2663 317 I 2662 317 I 2661 317 I 2661 316 I 2661 303 I 2661 303 I 2662 302 I 2663 303 I 2663 303 I 2663 303 I C 
2663 326 M 2663 339 I 2663 340 I 2662 340 I 2661 340 I 2661 339 I 2661 326 I 2661 325 I 2662 325 I 2663 325 I 2663 326 I 2663 326 I C 
2663 349 M 2663 362 I 2663 362 I 2662 363 I 2661 362 I 2661 362 I 2661 349 I 2661 348 I 2662 348 I 2663 348 I 2663 349 I 2663 349 I C 
2663 371 M 2663 385 I 2662 385 I 2661 385 I 2661 371 I 2662 371 I 2663 371 I 2663 371 I C 
2663 394 M 2663 407 I 2663 408 I 2662 409 I 2661 408 I 2661 407 I 2661 394 I 2662 393 I 2663 394 I 2663 394 I C 
2663 417 M 2663 430 I 2663 430 I 2662 431 I 2661 430 I 2661 430 I 2661 417 I 2661 416 I 2662 416 I 2663 416 I 2663 417 I 2663 417 I C 
2663 439 M 2663 453 I 2663 454 I 2662 454 I 2661 454 I 2661 453 I 2661 439 I 2661 439 I 2662 439 I 2663 439 I 2663 439 I 2663 439 I C 
2663 462 M 2663 475 I 2663 476 I 2662 477 I 2661 476 I 2661 475 I 2661 462 I 2661 462 I 2662 461 I 2663 462 I 2663 462 I 2663 462 I C 
2663 485 M 2663 499 I 2662 499 I 2661 499 I 2661 485 I 2662 484 I 2663 485 I 2663 485 I C 
2663 508 M 2663 521 I 2663 522 I 2662 522 I 2661 522 I 2661 521 I 2661 508 I 2662 507 I 2663 508 I 2663 508 I C 
2663 531 M 2663 544 I 2663 544 I 2662 545 I 2661 544 I 2661 544 I 2661 531 I 2661 530 I 2662 529 I 2663 530 I 2663 531 I 2663 531 I C 
2663 553 M 2663 567 I 2663 567 I 2662 567 I 2661 567 I 2661 567 I 2661 553 I 2661 552 I 2662 552 I 2663 552 I 2663 553 I 2663 553 I C 
2663 576 M 2663 589 I 2663 590 I 2662 590 I 2661 590 I 2661 589 I 2661 576 I 2661 575 I 2662 575 I 2663 575 I 2663 576 I 2663 576 I C 
2663 599 M 2663 612 I 2662 613 I 2661 612 I 2661 599 I 2662 598 I 2663 599 I 2663 599 I C 
2663 622 M 2663 635 I 2663 635 I 2662 636 I 2661 635 I 2661 635 I 2661 622 I 2662 620 I 2663 622 I 2663 622 I C 
2663 644 M 2663 657 I 2663 658 I 2662 658 I 2661 658 I 2661 657 I 2661 644 I 2661 644 I 2662 643 I 2663 644 I 2663 644 I 2663 644 I C 
2663 667 M 2663 680 I 2663 681 I 2662 681 I 2661 681 I 2661 680 I 2661 667 I 2661 666 I 2662 666 I 2663 666 I 2663 667 I 2663 667 I C 
2663 690 M 2663 703 I 2663 703 I 2662 704 I 2661 703 I 2661 703 I 2661 690 I 2661 689 I 2662 689 I 2663 689 I 2663 690 I 2663 690 I C 
2663 712 M 2663 726 I 2662 726 I 2661 726 I 2661 712 I 2662 712 I 2663 712 I 2663 712 I C 
2663 735 M 2663 748 I 2663 749 I 2662 750 I 2661 749 I 2661 748 I 2661 735 I 2662 734 I 2663 735 I 2663 735 I C 
2663 758 M 2663 771 I 2663 771 I 2662 772 I 2661 771 I 2661 771 I 2661 758 I 2661 757 I 2662 757 I 2663 757 I 2663 758 I 2663 758 I C 
2663 780 M 2663 794 I 2663 795 I 2662 795 I 2661 795 I 2661 794 I 2661 780 I 2661 780 I 2662 780 I 2663 780 I 2663 780 I 2663 780 I C 
2663 803 M 2663 816 I 2663 817 I 2662 818 I 2661 817 I 2661 816 I 2661 803 I 2661 803 I 2662 802 I 2663 803 I 2663 803 I 2663 803 I C 
2663 826 M 2663 840 I 2662 840 I 2661 840 I 2661 826 I 2662 825 I 2663 826 I 2663 826 I C 
2663 849 M 2663 862 I 2663 863 I 2662 863 I 2661 863 I 2661 862 I 2661 849 I 2662 848 I 2663 849 I 2663 849 I C 
2663 872 M 2663 885 I 2663 885 I 2662 886 I 2661 885 I 2661 885 I 2661 872 I 2661 871 I 2662 870 I 2663 871 I 2663 872 I 2663 872 I C 
2663 894 M 2663 908 I 2663 908 I 2662 908 I 2661 908 I 2661 908 I 2661 894 I 2661 893 I 2662 893 I 2663 893 I 2663 894 I 2663 894 I C 
2663 917 M 2663 930 I 2663 931 I 2662 931 I 2661 931 I 2661 930 I 2661 917 I 2661 917 I 2662 916 I 2663 917 I 2663 917 I 2663 917 I C 
2663 940 M 2663 953 I 2662 954 I 2661 953 I 2661 940 I 2662 939 I 2663 940 I 2663 940 I C 
2663 963 M 2663 976 I 2663 976 I 2662 977 I 2661 976 I 2661 976 I 2661 963 I 2662 962 I 2663 963 I 2663 963 I C 
2663 985 M 2663 998 I 2663 999 I 2662 999 I 2661 999 I 2661 998 I 2661 985 I 2661 985 I 2662 984 I 2663 985 I 2663 985 I 2663 985 I C 
2663 1008 M 2663 1021 I 2663 1022 I 2662 1022 I 2661 1022 I 2661 1021 I 2661 1008 I 2661 1007 I 2662 1007 I 2663 1007 I 2663 1008 I 2663 1008 I C 
2663 1031 M 2663 1044 I 2663 1044 I 2662 1045 I 2661 1044 I 2661 1044 I 2661 1031 I 2661 1030 I 2662 1030 I 2663 1030 I 2663 1031 I 2663 1031 I C 
2663 1053 M 2663 1067 I 2662 1067 I 2661 1067 I 2661 1053 I 2662 1053 I 2663 1053 I 2663 1053 I C 
2663 1076 M 2663 1089 I 2663 1090 I 2662 1091 I 2661 1090 I 2661 1089 I 2661 1076 I 2662 1075 I 2663 1076 I 2663 1076 I C 
2663 1099 M 2663 1112 I 2663 1112 I 2662 1113 I 2661 1112 I 2661 1112 I 2661 1099 I 2661 1098 I 2662 1098 I 2663 1098 I 2663 1099 I 2663 1099 I C 
2663 1121 M 2663 1135 I 2663 1136 I 2662 1136 I 2661 1136 I 2661 1135 I 2661 1121 I 2661 1121 I 2662 1121 I 2663 1121 I 2663 1121 I 2663 1121 I C 
2663 1144 M 2663 1157 I 2663 1158 I 2662 1159 I 2661 1158 I 2661 1157 I 2661 1144 I 2661 1144 I 2662 1143 I 2663 1144 I 2663 1144 I 2663 1144 I C 
2663 1167 M 2663 1181 I 2662 1181 I 2661 1181 I 2661 1167 I 2662 1166 I 2663 1167 I 2663 1167 I C 
2663 1190 M 2663 1203 I 2663 1204 I 2662 1204 I 2661 1204 I 2661 1203 I 2661 1190 I 2662 1189 I 2663 1190 I 2663 1190 I C 
2663 1213 M 2663 1226 I 2663 1226 I 2662 1227 I 2661 1226 I 2661 1226 I 2661 1213 I 2661 1212 I 2662 1211 I 2663 1212 I 2663 1213 I 2663 1213 I C 
2663 1235 M 2663 1249 I 2663 1249 I 2662 1249 I 2661 1249 I 2661 1249 I 2661 1235 I 2661 1234 I 2662 1234 I 2663 1234 I 2663 1235 I 2663 1235 I C 
2663 1258 M 2663 1262 I 2663 1263 I 2662 1263 I 2661 1263 I 2661 1262 I 2661 1258 I 2661 1258 I 2662 1257 I 2663 1258 I 2663 1258 I 2663 1258 I C 
:  L ; K 
29 Lw solid N 820 271 M 832 309 I 846 346 I 860 382 I 875 417 I 890 451 I 906 483 I 923 513 I 941 541 I 951 556 I 961 571 I 971 585 I 982 599 I 1003 624 I 1025 647 I 1048 668 I 1071 687 I 1095 705 I 1119 721 I 1144 735 I 1169 748 I 1194 759 I 1219 770 I 1245 779 I 1271 787 I 1298 795 I 1325 802 I 1369 812 I 1414 820 I 1459 827 I 1505 834 I 1550 838 I 1597 842 I 1642 845 I 1689 847 I 1734 848 I 1780 849 I 1826 849 I 1871 848 I 1916 847 I 1960 846 I 2003 844 I 2046 843 I 2097 840 I 2148 837 I 2198 832 I 2223 829 I 2248 825 I 2272 821 I 2297 815 I 2322 808 I 2348 800 I 2373 792 I 2398 782 I 2424 771 I 2451 758 I 2481 742 I 2511 724 I 2541 704 I 2572 683 I 2601 661 I 2630 637 I 2657 613 I 2683 587 I 2704 565 I 2724 544 I 2743 520 I 2761 497 I 2778 474 I 2794 449 I 2809 425 I 2824 400 I 2852 348 I 2879 295 I 2904 240 I 2930 183 I : 0.594 0.59 +S K 
; /F0S5E F0 [94.727 0 0 -94.727 0 0 ] mFS
F0S5E Ji 
1516 995 M (Intrinsic failures)[26 53 26 32 21 53 47 22 47 26 26 53 22 21 53 31 53  0]xS 
722 965 M (Infant )[26 53 26 53 53 26  0]xS 
661 1079 M (mortality)[79 53 32 26 53 21 21 27  0]xS 

%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold FontHasEuro not
{
/Euro.Helvetica-Bold
 [556 0 12 -19 563 710 ] 
<97F8C00DDBF7240378F70401F774EA01F803EA01F8EAF70401F8BBF9011571B141BE278B
08FB278B303173FB32085906642C05DB0676078B828C828B82086206632C05E506A8FB3A
EC3EF71B8B08C18BC192B9A908F71407676C54754C8B083B8B6ED483C508F72C06B3EA05
FB5E06BB07F77106B3EA05FB91069AE5B2B9CC8B08C98BB26FA17408A07691828F830809
0E>
AddEuroGlyph
/Euro /Helvetica-Bold /Helvetica-Bold-Copy BuildNewFont
} if
F /F1 0 /256 T /Helvetica-Bold mF 
/F1S5E F1 [94.727 0 0 -94.727 0 0 ] mFS
F1S5E Ji 
2524 944 M (Wear out)[90 53 53 36 27 58 58  0]xS 
N 1136 143 M 1448 143 I : 0.594 0.59 +S K 
; 1 0 0 1 scol 1 Lw solid N 1136 275 M 1176 275 I 1177 275 I 1179 278 I 1177 279 I 1176 280 I 1136 280 I 1134 279 I 1133 278 I 1134 275 I 1136 275 I 1136 275 I C 
1204 275 M 1244 275 I 1246 275 I 1247 278 I 1246 279 I 1244 280 I 1204 280 I 1202 279 I 1201 278 I 1202 275 I 1204 275 I 1204 275 I C 
1272 275 M 1312 275 I 1315 275 I 1315 278 I 1315 279 I 1312 280 I 1272 280 I 1271 279 I 1270 278 I 1271 275 I 1272 275 I 1272 275 I C 
1341 275 M 1381 275 I 1383 275 I 1384 278 I 1383 279 I 1381 280 I 1341 280 I 1339 279 I 1338 278 I 1339 275 I 1341 275 I 1341 275 I C 
1410 275 M 1448 275 I 1450 275 I 1451 278 I 1450 279 I 1448 280 I 1410 280 I 1407 279 I 1407 278 I 1407 275 I 1410 275 I 1410 275 I C 
:  L ; K 
0 0 0 1 scol 1506 172 M (Without ReviveNet)[90 26 32 58 58 58 32 26 69 53 52 27 52 53 69 53  0]xS 
1 0 0 1 scol 1541 306 M (With ReviveNet)[90 26 31 58 26 69 53 53 26 53 53 69 53  0]xS 
N 1983 840 M 2043 840 I 2049 840 I 2051 840 I 2053 841 I 2053 843 I 2054 844 I 2053 846 I 2053 848 I 2051 849 I 2049 849 I 2043 849 I 1983 850 I 1981 849 I 1979 848 I 1979 847 I 1978 845 I 1979 843 I 1979 841 I 1981 841 I 1983 840 I 1983 840 I C 
2097 840 M 2101 839 I 2160 839 I 2163 839 I 2165 839 I 2167 840 I 2167 842 I 2168 844 I 2167 845 I 2167 847 I 2165 848 I 2163 848 I 2160 848 I 2101 848 I 2097 849 I 2095 848 I 2093 847 I 2093 846 I 2092 844 I 2093 843 I 2093 841 I 2095 840 I 2097 840 I 2097 840 I C 
2211 838 M 2217 838 I 2273 838 I 2277 838 I 2279 838 I 2281 839 I 2281 840 I 2282 842 I 2281 844 I 2281 845 I 2279 847 I 2277 847 I 2273 847 I 2217 848 I 2211 848 I 2209 847 I 2207 847 I 2207 845 I 2206 843 I 2207 841 I 2207 840 I 2209 839 I 2211 838 I 2211 838 I C 
2325 837 M 2328 837 I 2382 836 I 2391 836 I 2393 837 I 2395 837 I 2395 839 I 2396 841 I 2395 843 I 2395 844 I 2393 845 I 2391 845 I 2382 845 I 2328 846 I 2325 847 I 2323 846 I 2321 845 I 2321 844 I 2320 842 I 2321 840 I 2321 838 I 2323 837 I 2325 837 I 2325 837 I C 
2439 835 M 2487 834 I 2505 834 I 2507 834 I 2508 835 I 2509 837 I 2510 839 I 2509 841 I 2509 842 I 2507 843 I 2505 844 I 2487 844 I 2439 845 I 2437 844 I 2435 843 I 2435 842 I 2434 840 I 2435 838 I 2435 837 I 2437 835 I 2439 835 I 2439 835 I C 
2553 833 M 2585 832 I 2619 832 I 2621 832 I 2622 833 I 2623 835 I 2624 837 I 2623 838 I 2623 840 I 2621 841 I 2619 841 I 2586 842 I 2553 843 I 2551 843 I 2549 841 I 2549 840 I 2548 838 I 2549 836 I 2549 835 I 2551 834 I 2553 833 I 2553 833 I C 
2667 831 M 2679 830 I 2722 829 I 2733 829 I 2735 829 I 2736 830 I 2737 832 I 2738 834 I 2737 835 I 2737 837 I 2735 838 I 2733 838 I 2723 838 I 2679 840 I 2667 840 I 2665 840 I 2663 839 I 2663 837 I 2662 835 I 2662 834 I 2663 832 I 2665 831 I 2667 831 I 2667 831 I C 
2780 828 M 2805 827 I 2843 825 I 2847 825 I 2849 825 I 2850 827 I 2851 828 I 2852 830 I 2851 832 I 2851 833 I 2849 834 I 2847 835 I 2844 835 I 2805 836 I 2781 837 I 2779 837 I 2777 835 I 2776 834 I 2776 832 I 2776 831 I 2777 829 I 2778 828 I 2780 828 I 2780 828 I C 
2894 824 M 2914 823 I 2947 821 I 2961 821 I 2962 821 I 2964 822 I 2965 824 I 2965 825 I 2965 827 I 2964 829 I 2963 829 I 2961 830 I 2947 831 I 2915 832 I 2895 833 I 2893 832 I 2891 832 I 2890 830 I 2890 828 I 2890 827 I 2891 825 I 2892 824 I 2894 824 I 2894 824 I C 
3008 818 M 3018 818 I 3031 817 I 3043 816 I 3054 815 I 3065 815 I 3075 814 I 3076 814 I 3078 815 I 3079 816 I 3079 818 I 3079 820 I 3078 822 I 3077 823 I 3075 824 I 3065 824 I 3054 825 I 3043 826 I 3031 827 I 3019 827 I 3009 828 I 3007 828 I 3005 827 I 3004 825 I 3003 824 I 3004 821 I 3005 820 I 3006 819 I 3008 818 I 3008 818 I C 
3122 809 M 3126 809 I 3131 808 I 3135 807 I 3138 806 I 3141 805 I 3142 805 I 3141 805 I 3142 805 I 3141 806 I 3141 806 I 3142 804 I 3144 803 I 3146 803 I 3148 803 I 3149 804 I 3150 806 I 3150 808 I 3150 809 I 3150 811 I 3148 812 I 3147 813 I 3146 814 I 3144 815 I 3141 815 I 3137 816 I 3133 817 I 3128 818 I 3123 819 I 3121 819 I 3119 818 I 3118 816 I 3117 815 I 3117 813 I 3118 811 I 3120 810 I 3122 809 I 3122 809 I C 
3145 803 M 3155 802 I 3155 802 I 3165 799 I 3175 796 I 3183 792 I 3185 791 I 3186 791 I 3188 792 I 3189 793 I 3190 795 I 3189 797 I 3189 799 I 3187 800 I 3179 805 I 3167 809 I 3157 811 I 3157 811 I 3146 812 I 3144 812 I 3142 811 I 3141 810 I 3141 808 I 3141 806 I 3142 805 I 3144 803 I 3145 803 I 3145 803 I C 
3217 761 M 3222 755 I 3231 742 I 3239 729 I 3248 714 I 3252 706 I 3253 705 I 3255 704 I 3256 704 I 3258 705 I 3260 706 I 3261 707 I 3261 709 I 3261 710 I 3256 719 I 3247 734 I 3239 748 I 3229 761 I 3224 767 I 3223 769 I 3221 769 I 3219 769 I 3217 768 I 3216 766 I 3215 764 I 3215 763 I 3217 761 I 3217 761 I C 
3272 664 M 3272 662 I 3280 642 I 3287 622 I 3294 602 I 3294 600 I 3296 599 I 3297 599 I 3300 599 I 3301 600 I 3302 601 I 3303 603 I 3303 605 I 3296 625 I 3288 646 I 3281 666 I 3280 667 I 3280 669 I 3278 670 I 3276 670 I 3274 670 I 3272 669 I 3272 667 I 3271 665 I 3272 664 I 3272 664 I C 
3306 556 M 3307 554 I 3313 530 I 3318 504 I 3321 492 I 3322 490 I 3323 489 I 3325 488 I 3326 488 I 3328 489 I 3329 490 I 3330 492 I 3330 494 I 3328 506 I 3322 532 I 3316 557 I 3316 559 I 3315 560 I 3313 561 I 3312 562 I 3310 562 I 3308 561 I 3307 560 I 3306 558 I 3306 556 I 3306 556 I C 
3329 445 M 3332 424 I 3337 396 I 3338 380 I 3339 378 I 3340 377 I 3342 376 I 3344 376 I 3345 377 I 3347 378 I 3348 379 I 3348 381 I 3346 397 I 3342 425 I 3338 447 I 3338 449 I 3337 450 I 3335 451 I 3333 451 I 3331 450 I 3330 449 I 3329 448 I 3329 445 I 3329 445 I C 
3344 333 M 3346 307 I 3348 267 I 3348 265 I 3350 263 I 3351 263 I 3353 262 I 3355 263 I 3357 264 I 3357 266 I 3358 268 I 3355 307 I 3353 334 I 3353 336 I 3351 337 I 3350 338 I 3348 338 I 3346 337 I 3345 336 I 3344 335 I 3344 333 I 3344 333 I C 
3350 220 M 3351 181 I 3351 179 I 3353 178 I 3354 176 I 3356 176 I 3358 176 I 3360 178 I 3360 179 I 3361 181 I 3360 220 I 3359 222 I 3358 223 I 3357 224 I 3355 224 I 3353 224 I 3351 223 I 3351 221 I 3350 220 I 3350 220 I C 
:  L ; K 
0 0 0 1 scol N 3312 91 M 3312 105 I 3312 105 I 3311 105 I 3310 105 I 3310 105 I 3310 91 I 3310 91 I 3311 91 I 3312 91 I 3312 91 I 3312 91 I C 
3312 114 M 3312 127 I 3312 128 I 3311 129 I 3310 128 I 3310 127 I 3310 114 I 3310 114 I 3311 113 I 3312 114 I 3312 114 I 3312 114 I C 
3312 137 M 3312 150 I 3311 151 I 3310 150 I 3310 137 I 3310 136 I 3311 136 I 3312 136 I 3312 137 I 3312 137 I C 
3312 160 M 3312 173 I 3312 174 I 3311 174 I 3310 174 I 3310 173 I 3310 160 I 3310 159 I 3311 159 I 3312 159 I 3312 160 I 3312 160 I C 
3312 182 M 3312 195 I 3312 197 I 3311 197 I 3310 197 I 3310 195 I 3310 182 I 3310 182 I 3311 181 I 3312 182 I 3312 182 I 3312 182 I C 
3312 205 M 3312 218 I 3312 219 I 3311 219 I 3310 219 I 3310 218 I 3310 205 I 3310 204 I 3311 204 I 3312 204 I 3312 205 I 3312 205 I C 
3312 228 M 3312 241 I 3312 242 I 3311 242 I 3310 242 I 3310 241 I 3310 228 I 3310 227 I 3311 227 I 3312 227 I 3312 228 I 3312 228 I C 
3312 250 M 3312 264 I 3311 265 I 3310 264 I 3310 250 I 3310 250 I 3311 250 I 3312 250 I 3312 250 I 3312 250 I C 
3312 274 M 3312 287 I 3312 287 I 3311 288 I 3310 287 I 3310 287 I 3310 274 I 3310 273 I 3311 272 I 3312 273 I 3312 274 I 3312 274 I C 
3312 296 M 3312 309 I 3312 310 I 3311 310 I 3310 310 I 3310 309 I 3310 296 I 3310 295 I 3311 295 I 3312 295 I 3312 296 I 3312 296 I C 
3312 319 M 3312 332 I 3312 333 I 3311 333 I 3310 333 I 3310 332 I 3310 319 I 3310 318 I 3311 318 I 3312 318 I 3312 319 I 3312 319 I C 
3312 342 M 3312 355 I 3312 355 I 3311 356 I 3310 355 I 3310 355 I 3310 342 I 3310 341 I 3311 340 I 3312 341 I 3312 342 I 3312 342 I C 
3312 364 M 3312 378 I 3311 378 I 3310 378 I 3310 364 I 3310 364 I 3311 364 I 3312 364 I 3312 364 I 3312 364 I C 
3312 387 M 3312 400 I 3312 401 I 3311 401 I 3310 401 I 3310 400 I 3310 387 I 3310 387 I 3311 386 I 3312 387 I 3312 387 I 3312 387 I C 
3312 410 M 3312 423 I 3312 424 I 3311 424 I 3310 424 I 3310 423 I 3310 410 I 3310 409 I 3311 409 I 3312 409 I 3312 410 I 3312 410 I C 
3312 432 M 3312 446 I 3312 446 I 3311 446 I 3310 446 I 3310 446 I 3310 432 I 3310 432 I 3311 432 I 3312 432 I 3312 432 I 3312 432 I C 
3312 455 M 3312 468 I 3312 469 I 3311 470 I 3310 469 I 3310 468 I 3310 455 I 3310 455 I 3311 454 I 3312 455 I 3312 455 I 3312 455 I C 
3312 478 M 3312 491 I 3311 492 I 3310 491 I 3310 478 I 3310 477 I 3311 477 I 3312 477 I 3312 478 I 3312 478 I C 
3312 501 M 3312 514 I 3312 515 I 3311 515 I 3310 515 I 3310 514 I 3310 501 I 3310 500 I 3311 500 I 3312 500 I 3312 501 I 3312 501 I C 
3312 523 M 3312 536 I 3312 538 I 3311 538 I 3310 538 I 3310 536 I 3310 523 I 3310 523 I 3311 522 I 3312 523 I 3312 523 I 3312 523 I C 
3312 546 M 3312 560 I 3312 560 I 3311 560 I 3310 560 I 3310 560 I 3310 546 I 3310 545 I 3311 545 I 3312 545 I 3312 546 I 3312 546 I C 
3312 569 M 3312 582 I 3312 583 I 3311 583 I 3310 583 I 3310 582 I 3310 569 I 3310 568 I 3311 568 I 3312 568 I 3312 569 I 3312 569 I C 
3312 591 M 3312 605 I 3311 606 I 3310 605 I 3310 591 I 3310 591 I 3311 591 I 3312 591 I 3312 591 I 3312 591 I C 
3312 615 M 3312 628 I 3312 628 I 3311 629 I 3310 628 I 3310 628 I 3310 615 I 3310 614 I 3311 613 I 3312 614 I 3312 615 I 3312 615 I C 
3312 637 M 3312 650 I 3312 651 I 3311 651 I 3310 651 I 3310 650 I 3310 637 I 3310 636 I 3311 636 I 3312 636 I 3312 637 I 3312 637 I C 
3312 660 M 3312 673 I 3312 674 I 3311 674 I 3310 674 I 3310 673 I 3310 660 I 3310 659 I 3311 659 I 3312 659 I 3312 660 I 3312 660 I C 
3312 683 M 3312 696 I 3312 696 I 3311 697 I 3310 696 I 3310 696 I 3310 683 I 3310 682 I 3311 681 I 3312 682 I 3312 683 I 3312 683 I C 
3312 705 M 3312 719 I 3311 719 I 3310 719 I 3310 705 I 3310 705 I 3311 705 I 3312 705 I 3312 705 I 3312 705 I C 
3312 728 M 3312 741 I 3312 742 I 3311 742 I 3310 742 I 3310 741 I 3310 728 I 3310 728 I 3311 727 I 3312 728 I 3312 728 I 3312 728 I C 
3312 751 M 3312 764 I 3312 765 I 3311 765 I 3310 765 I 3310 764 I 3310 751 I 3310 750 I 3311 750 I 3312 750 I 3312 751 I 3312 751 I C 
3312 773 M 3312 787 I 3312 787 I 3311 787 I 3310 787 I 3310 787 I 3310 773 I 3310 773 I 3311 773 I 3312 773 I 3312 773 I 3312 773 I C 
3312 796 M 3312 809 I 3312 810 I 3311 811 I 3310 810 I 3310 809 I 3310 796 I 3310 796 I 3311 795 I 3312 796 I 3312 796 I 3312 796 I C 
3312 819 M 3312 832 I 3311 833 I 3310 832 I 3310 819 I 3310 818 I 3311 818 I 3312 818 I 3312 819 I 3312 819 I C 
3312 842 M 3312 855 I 3312 856 I 3311 856 I 3310 856 I 3310 855 I 3310 842 I 3310 841 I 3311 841 I 3312 841 I 3312 842 I 3312 842 I C 
3312 864 M 3312 877 I 3312 879 I 3311 879 I 3310 879 I 3310 877 I 3310 864 I 3310 864 I 3311 863 I 3312 864 I 3312 864 I 3312 864 I C 
3312 887 M 3312 901 I 3312 901 I 3311 901 I 3310 901 I 3310 901 I 3310 887 I 3310 886 I 3311 886 I 3312 886 I 3312 887 I 3312 887 I C 
3312 910 M 3312 923 I 3312 924 I 3311 924 I 3310 924 I 3310 923 I 3310 910 I 3310 909 I 3311 909 I 3312 909 I 3312 910 I 3312 910 I C 
3312 933 M 3312 946 I 3312 947 I 3311 947 I 3310 947 I 3310 946 I 3310 933 I 3310 932 I 3311 932 I 3312 932 I 3312 933 I 3312 933 I C 
3312 956 M 3312 969 I 3312 969 I 3311 970 I 3310 969 I 3310 969 I 3310 956 I 3310 955 I 3311 954 I 3312 955 I 3312 956 I 3312 956 I C 
3312 978 M 3312 991 I 3312 992 I 3311 992 I 3310 992 I 3310 991 I 3310 978 I 3310 977 I 3311 977 I 3312 977 I 3312 978 I 3312 978 I C 
3312 1001 M 3312 1014 I 3312 1015 I 3311 1015 I 3310 1015 I 3310 1014 I 3310 1001 I 3310 1000 I 3311 1000 I 3312 1000 I 3312 1001 I 3312 1001 I C 
3312 1024 M 3312 1037 I 3312 1037 I 3311 1038 I 3310 1037 I 3310 1037 I 3310 1024 I 3311 1022 I 3312 1024 I 3312 1024 I C 
3312 1046 M 3312 1060 I 3312 1060 I 3311 1060 I 3310 1060 I 3310 1060 I 3310 1046 I 3310 1046 I 3311 1046 I 3312 1046 I 3312 1046 I 3312 1046 I C 
3312 1069 M 3312 1082 I 3312 1083 I 3311 1083 I 3310 1083 I 3310 1082 I 3310 1069 I 3310 1069 I 3311 1068 I 3312 1069 I 3312 1069 I 3312 1069 I C 
3312 1092 M 3312 1105 I 3312 1106 I 3311 1106 I 3310 1106 I 3310 1105 I 3310 1092 I 3310 1091 I 3311 1091 I 3312 1091 I 3312 1092 I 3312 1092 I C 
3312 1114 M 3312 1128 I 3312 1128 I 3311 1128 I 3310 1128 I 3310 1128 I 3310 1114 I 3310 1114 I 3311 1114 I 3312 1114 I 3312 1114 I 3312 1114 I C 
3312 1137 M 3312 1150 I 3312 1151 I 3311 1152 I 3310 1151 I 3310 1150 I 3310 1137 I 3311 1136 I 3312 1137 I 3312 1137 I C 
3312 1160 M 3312 1173 I 3312 1174 I 3311 1174 I 3310 1174 I 3310 1173 I 3310 1160 I 3310 1159 I 3311 1159 I 3312 1159 I 3312 1160 I 3312 1160 I C 
3312 1183 M 3312 1196 I 3312 1197 I 3311 1197 I 3310 1197 I 3310 1196 I 3310 1183 I 3310 1182 I 3311 1182 I 3312 1182 I 3312 1183 I 3312 1183 I C 
3312 1205 M 3312 1218 I 3312 1220 I 3311 1220 I 3310 1220 I 3310 1218 I 3310 1205 I 3310 1205 I 3311 1204 I 3312 1205 I 3312 1205 I 3312 1205 I C 
3312 1228 M 3312 1242 I 3312 1242 I 3311 1242 I 3310 1242 I 3310 1242 I 3310 1228 I 3310 1227 I 3311 1227 I 3312 1227 I 3312 1228 I 3312 1228 I C 
3312 1251 M 3312 1264 I 3312 1265 I 3311 1265 I 3310 1265 I 3310 1264 I 3310 1251 I 3311 1250 I 3312 1251 I 3312 1251 I C 
3312 1274 M 3312 1287 I 3312 1288 I 3311 1288 I 3310 1288 I 3310 1287 I 3310 1274 I 3310 1273 I 3311 1273 I 3312 1273 I 3312 1274 I 3312 1274 I C 
3312 1297 M 3312 1310 I 3312 1310 I 3311 1311 I 3310 1310 I 3310 1310 I 3310 1297 I 3310 1296 I 3311 1295 I 3312 1296 I 3312 1297 I 3312 1297 I C 
3312 1319 M 3312 1332 I 3312 1333 I 3311 1333 I 3310 1333 I 3310 1332 I 3310 1319 I 3310 1319 I 3311 1318 I 3312 1319 I 3312 1319 I 3312 1319 I C 
3312 1342 M 3312 1355 I 3312 1356 I 3311 1356 I 3310 1356 I 3310 1355 I 3310 1342 I 3310 1341 I 3311 1341 I 3312 1341 I 3312 1342 I 3312 1342 I C 
3312 1365 M 3312 1378 I 3312 1378 I 3311 1379 I 3310 1378 I 3310 1378 I 3310 1365 I 3311 1364 I 3312 1365 I 3312 1365 I C 
3312 1387 M 3312 1401 I 3312 1401 I 3311 1401 I 3310 1401 I 3310 1401 I 3310 1387 I 3310 1387 I 3311 1387 I 3312 1387 I 3312 1387 I 3312 1387 I C 
3312 1410 M 3312 1423 I 3312 1424 I 3311 1424 I 3310 1424 I 3310 1423 I 3310 1410 I 3310 1410 I 3311 1409 I 3312 1410 I 3312 1410 I 3312 1410 I C 
3312 1433 M 3312 1434 I 3312 1435 I 3311 1435 I 3310 1435 I 3310 1434 I 3310 1433 I 3310 1432 I 3311 1432 I 3312 1432 I 3312 1433 I 3312 1433 I C 
:  L ; K 
0.754 0.754 0.754 1 scol 29 Lw solid N 2772 639 M 3199 639 I : 0.594 0.59 +S K 
; N 2716 639 M 2790 603 I 2787 612 I 2784 621 I 2782 630 I 2782 639 I 2782 649 I 2784 658 I 2787 668 I 2790 677 I 2716 639 I 2716 639 I C 
 O N 3255 639 M 3181 677 I 3185 668 I 3188 658 I 3189 650 I 3190 640 I 3189 631 I 3188 621 I 3185 612 I 3181 603 I 3181 603 I 3255 639 I 3255 639 I C 
 O 0 0 0 1 scol 
%%IncludeResource: font Times-Roman
/Times-Roman FontHasEuro not
{
/Euro.Times-Roman
 [500 0 24 -14 493 676 ] 
<A3F8880DC0EB03F854F743950C0C037DA501F7A0BB01F805BB01F91EA501F869F8911584
F73A0576068478827E7F8B087F8B70AC438B082A8BFB0D6471FB700863067C5B05BE068A
7E8B878B7D08750764067D5B05C206A0FB7BF71858E88B088F0AC0EB03F84BF789950C0C
037DA501F7A0BB01F805BB01F91EA501CA8BACAC998B08988B95809076088F0AC0EB03F8
54F743950C0C037DA501F7A0BB01F805BB01F91EA501A00692F73705750675FB09417667
8B083A8B43C182F75E08F7740699BB05FB84069C078B978C978B9708F7950699BB05FBA1
069AF755D5B3D18B08AB8BDD71A2FB0708090E>
AddEuroGlyph
/Euro /Times-Roman /Times-Roman-Copy BuildNewFont
} if
F /F2 0 /256 T /Times-Roman mF 
/F2S5E F2 [94.727 0 0 -94.727 0 0 ] mFS
F2S5E Ji 
2822 567 M (Extended Lifetime )[58 47 27 42 47 48 42 47 24 58 26 32 42 26 26 74 42  0]xS 
3 Lw N 1034 1210 M 2629 1210 I : 0.594 0.59 +S K 
; N 1001 1210 M 1045 1188 I 1043 1194 I 1041 1199 I 1040 1205 I 1040 1210 I 1040 1216 I 1041 1221 I 1043 1227 I 1045 1232 I 1045 1232 I 1001 1210 I 1001 1210 I C 
 O N 2662 1210 M 2618 1232 I 2620 1227 I 2622 1221 I 2623 1216 I 2623 1210 I 2623 1205 I 2622 1199 I 2620 1194 I 2618 1188 I 2618 1188 I 2662 1210 I 2662 1210 I C 
 O N 1606 1153 M 1606 1267 I 2052 1267 I 2052 1153 I 1606 1153 I C 
1 1 1 1 scol  O 0 0 0 1 scol 1609 1239 M (Useful time)[68 37 42 32 47 27 23 26 27 73  0]xS 
1 0 0 1 scol F1S5E Ji 
3302 765 M (W)S 
3392 765 M (e)S  3445 765 M (a)S  3497 765 M (r)S  3534 765 M ( )S  3560 765 M (o)S  3619 765 M (u)S  3677 765 M (t)S  
0 0 0 1 scol /F0S47 F0 [71.043 0 0 -71.043 0 0 ] mFS
F0S47 Ji 
3394 965 M (R)S 
3445 965 M (e)S  3485 965 M (v)S  3521 965 M (i)S  3537 965 M (v)S  3572 965 M (e)S  3612 965 M (N)S  3664 965 M (e)S  3703 965 M (t)S  3723 965 M ( )S  
3389 1050 M (E)S 
3437 1050 M (x)S  3473 1050 M (h)S  3512 1050 M (a)S  3552 1050 M (u)S  3592 1050 M (s)S  3628 1050 M (t)S  3647 1050 M (e)S  3687 1050 M (d)S  
N 3379 958 M 3226 806 I : 0.594 0.59 +S K 
; N 3202 783 M 3249 798 I 3243 800 I 3239 803 I 3230 810 I 3223 818 I 3220 824 I 3218 829 I 3202 783 I 3202 783 I C 
 O 1 0 0 1 scol N 1034 1367 M 3278 1367 I : 0.594 0.59 +S K 
; N 1001 1367 M 1045 1345 I 1043 1350 I 1041 1356 I 1040 1361 I 1040 1367 I 1040 1372 I 1041 1378 I 1043 1384 I 1045 1388 I 1045 1388 I 1001 1367 I 1001 1367 I C 
 O N 3311 1367 M 3268 1389 I 3269 1384 I 3271 1378 I 3272 1372 I 3272 1367 I 3272 1361 I 3271 1356 I 3269 1350 I 3268 1345 I 3311 1367 I 3311 1367 I C 
 O N 1744 1310 M 1744 1424 I 2562 1424 I 2562 1310 I 1744 1310 I C 
1 1 1 1 scol  O 1 0 0 1 scol F2S5E Ji 
1747 1395 M (Improved useful time)[31 74 48 31 47 48 42 48 23 48 37 42 31 48 26 24 26 26 74  0]xS 
LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
