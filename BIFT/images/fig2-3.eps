%!PS-Adobe-3.0 EPSF-3.0
%%Title: WMF2EPS 1.32  : WMF->EPS conversion for xorprotection.wmf
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 8/25/2009 21:1:3
%%For: Administrator
%%BoundingBox: 56 56 285 187
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (WMF2EPS Color PS) (2010.0) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 0 0 285 187
%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman[/STSong-Light--GBK-EUC-H
dup{findfont}stopped{cleartomark}{/FontName get eq{pop cleartomark[
<b8c3cec4bcfed0e8d2aad3c3b5c4c4dab4e6ccabb6e0a1a3c4fabfc9d2d4cad4d3c3c8e7cfc2b5
c4b7bdb7a8d4d9b4f2d3a1a3ba>100 500<d4daa1b0506f7374536372697074a1b1b6d4bbb0bf
f2a3acd1a1d4f1a1b0506f7374536372697074a3a8b6d4b1e3d0afcabd41445343b5c4d3c5bbafa
3a9a1b1a1a3>115 485<d4daa1b0c9e8b1b8d1a1cfeea1b1b6d4bbb0bff2a3aca1b0bfc9d3c3b
4f2d3a1bbfac4dab4e6a1b1b5c4d6b5cac7beabc8b7b5c4a1a3>115 470<d4dacec4bcfed6d0c
9d9d3c3bcb8d6d6d7d6cce5a1a3>115 455<b5a5b6c0b4f2d3a1b8c3cec4bcfeb5c4b2bbcdacb
2bfb7d6bbf2d2b3a1a3>115 440 10 0/STSong-Light--GBK-EUC-H}{cleartomark}ifelse}
ifelse showpage(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}
bind def end version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get
def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 0 187.37008 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 0 0 285 187
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b
%%EndResource
end reinitialize
N 700 944 M 697 941 I 695 938 I 694 935 I 695 932 I 695 928 I 697 925 I 701 917 I 707 910 I 711 902 I 713 898 I 715 894 I 716 890 I 716 886 I 715 882 I 713 877 I 711 873 I 708 869 I 703 861 I 701 858 I 699 855 I 698 851 I 699 848 I 700 846 I 701 843 I 707 837 I 713 833 I 720 827 I 727 821 I 733 814 I 735 811 I 736 807 I 737 801 I 737 795 I 736 789 I 735 782 I 731 770 I 729 765 I 727 759 I 726 756 I 724 752 I 722 746 I 721 741 I 722 737 I 724 731 I 729 724 I 732 720 I 736 714 I 740 709 I 745 702 I 751 694 I 756 686 I 758 682 I 760 678 I 761 674 I 761 670 I 759 667 I 757 665 I 755 663 I 751 661 I 743 657 I 734 654 I 724 651 I 716 648 I 708 644 I 704 642 I 702 640 I 701 637 I 700 634 I 700 628 I 701 621 I 703 614 I 707 606 I 711 599 I 719 583 I 723 576 I 726 570 I 727 564 I 726 559 I 725 557 I 724 555 I 721 554 I 718 553 I 715 552 I 711 551 I 705 552 I 700 552 I 1086 552 I 1086 944 I 700 944 I 700 944 I C 
0.754 0.754 0.754 1 scol  O 0 0 0 1 scol 1 Lj 1 Lc 3 Lw solid N 700 944 M 697 941 I 695 938 I 694 935 I 695 932 I 695 928 I 697 925 I 701 917 I 707 910 I 711 902 I 713 898 I 715 894 I 716 890 I 716 886 I 715 882 I 713 877 I 711 873 I 708 869 I 703 861 I 701 858 I 699 855 I 698 851 I 699 848 I 700 846 I 701 843 I 707 837 I 713 833 I 720 827 I 727 821 I 733 814 I 735 811 I 736 807 I 737 801 I 737 795 I 736 789 I 735 782 I 731 770 I 729 765 I 727 759 I 726 756 I 724 752 I 722 746 I 721 741 I 722 737 I 724 731 I 729 724 I 732 720 I 736 714 I 740 709 I 745 702 I 751 694 I 756 686 I 758 682 I 760 678 I 761 674 I 761 670 I 759 667 I 757 665 I 755 663 I 751 661 I 743 657 I 734 654 I 724 651 I 716 648 I 708 644 I 704 642 I 702 640 I 701 637 I 700 634 I 700 628 I 701 621 I 703 614 I 707 606 I 711 599 I 719 583 I 723 576 I 726 570 I 727 564 I 726 559 I 725 557 I 724 555 I 721 554 I 718 553 I 715 552 I 711 551 I 705 552 I 700 552 I 1086 552 I 1086 944 I 700 944 I 700 944 I : 0.59 0.59 +S K 
; Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Helvetica
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
/Helvetica FontHasEuro not
{
/Euro.Helvetica
 [556 0 24 -19 541 703 ] 
<A3F8C00DD4E90378DA01F779D301F808D301F904DA01F899F908156CB447AD338B08FB2D
8B372B7BFB37085806724305D30644075B06724305DA06A0FB36E035F7218B08E08BCDB7
939208EE077A71405E418B083F8B4CCE84F108F76506A3D305FB8306D207F79C06A3D305
FBB10692E2B7E8F28B08E08BBE62A45A08090E>
AddEuroGlyph
/Euro /Helvetica /Helvetica-Copy BuildNewFont
} if
F /F0 0 /256 T /Helvetica mF 
/F0S4E F0 [78.785 0 0 -78.785 0 0 ] mFS
F0S4E Ji 
774 686 M (Comb)[56 44 66  0]xS 
984 686 M (.)S 
785 781 M ( Logic )[22 44 43 44 18 40  0]xS 
N 1297 540 M 1297 957 I 1386 957 I 1386 540 I 1297 540 I C 
0.754 0.754 0.754 1 scol  O 0 0 0 1 scol N 1297 957 M 1386 957 I 1386 540 I 1297 540 I 1297 957 I C 
: 0.59 0.59 +S K 
; /F0S00I4E F0 [0 78.785 78.785 0 0 0 ] mFS
F0S00I4E Ji 
1322 680 M (F)S 
1322 728 M (F)S 
1322 777 M (s)S 
N 1341 901 M 1297 961 I 1386 961 I 1341 901 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1341 901 M 1297 961 I 1386 961 I 1341 901 I C 
: 0.59 0.59 +S K 
; N 1345 968 M 1345 1047 I : 0.59 0.59 +S K 
; N 1367 990 M 1345 968 I 1323 990 I : 0.59 0.59 +S K 
; F0S4E Ji 
1367 1055 M (clk)[39 18  0]xS 
N 1433 179 M 1665 179 I : 0.59 0.59 +S K 
; N 1433 295 M 1665 295 I : 0.59 0.59 +S K 
; N 1896 237 M 1665 237 I : 0.59 0.59 +S K 
; N 1814 237 M 1807 247 I 1799 258 I 1790 268 I 1780 276 I 1769 286 I 1758 294 I 1745 303 I 1732 310 I 1718 317 I 1704 324 I 1688 330 I 1673 336 I 1656 341 I 1640 345 I 1622 349 I 1604 352 I 1604 352 I 1514 352 I 1524 339 I 1532 324 I 1540 310 I 1545 295 I 1550 281 I 1553 266 I 1556 252 I 1556 237 I 1556 222 I 1553 207 I 1550 192 I 1545 178 I 1540 163 I 1532 149 I 1524 135 I 1514 121 I 1514 121 I 1604 121 I 1604 121 I 1622 124 I 1640 128 I 1656 133 I 1673 138 I 1689 143 I 1704 150 I 1718 156 I 1732 163 I 1746 171 I 1758 179 I 1769 188 I 1780 197 I 1790 206 I 1799 216 I 1807 226 I 1814 237 I 1814 237 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1814 237 M 1807 247 I 1799 258 I 1790 268 I 1780 276 I 1769 286 I 1758 294 I 1745 303 I 1732 310 I 1718 317 I 1704 324 I 1688 330 I 1673 336 I 1656 341 I 1640 345 I 1622 349 I 1604 352 I 1604 352 I 1514 352 I 1524 339 I 1532 324 I 1540 310 I 1545 295 I 1550 281 I 1553 266 I 1556 252 I 1556 237 I 1556 222 I 1553 207 I 1550 192 I 1545 178 I 1540 163 I 1532 149 I 1524 135 I 1514 121 I 1514 121 I 1604 121 I 1604 121 I 1622 124 I 1640 128 I 1656 133 I 1673 138 I 1689 143 I 1704 150 I 1718 156 I 1732 163 I 1746 171 I 1758 179 I 1769 188 I 1780 197 I 1790 206 I 1799 216 I 1807 226 I 1814 237 I 1814 237 I : 0.59 0.59 +S K 
; N 1484 352 M 1494 339 I 1502 324 I 1509 310 I 1515 295 I 1520 281 I 1523 266 I 1525 252 I 1526 237 I 1525 222 I 1523 207 I 1520 192 I 1515 178 I 1509 163 I 1502 149 I 1494 135 I 1484 121 I : 0.59 0.59 +S K 
; N 1204 747 M 1204 179 I 1433 179 I : 0.59 0.59 +S K 
; N 1896 237 M 2094 237 I : 0.59 0.59 +S K 
; N 2127 238 M 2083 259 I 2086 254 I 2087 249 I 2089 243 I 2089 237 I 2089 232 I 2087 227 I 2086 221 I 2084 215 I 2127 238 I 2127 238 I C 
 O 1742 1046 M (Kth stage)[53 22 44 22 39 22 44 44  0]xS 
586 1046 M (\()S 
612 1046 M (K)S 
665 1046 M (-)S 
691 1046 M (1)S 
735 1046 M (\))S 
761 1046 M (st stage)[40 22 22 39 22 44 44  0]xS 
N 1433 295 M 1433 749 I : 0.59 0.59 +S K 
; 1086 861 M (So)[53  0]xS 
/F0S33 F0 [51.535 0 0 -51.535 0 0 ] mFS
F0S33 Ji 
1182 824 M (\()S 
1199 824 M (k)S 
1225 824 M (-)S 
1242 824 M (1)S 
1271 824 M (\))S 
F0S4E Ji 
1437 861 M (Si)[53  0]xS 
F0S33 Ji 
1508 824 M (k)S 
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_T3Hdr 5.0 0
{version cvi 2016 ge{32/FontType resourcestatus{pop pop true}{false}ifelse}
{false}ifelse}exec/Is2016andT32? exch def/T32DefSBCMap{/CIDInit/ProcSet
findresource begin 10 dict begin begincmap/CIDSystemInfo 3 dict dup begin
/Registry(Adobe)def/Ordering(Identity1)def/Supplement 0 def end def/CMapType 0
def/WMode 0 def 1 begincodespacerange<00><ff>endcodespacerange 1 begincidrange
<00><ff>0 endcidrange endcmap/DrvSBCMap currentdict/CMap defineresource pop end
end}bind def Is2016andT32?{T32DefSBCMap}def/T32RsrcBegin{Is2016andT32?{
/BitmapFontInit/ProcSet findresource begin}if}bind def/T32RsrcEnd{Is2016andT32?
{end}if}bind def/AddT32Char{6 1 roll 0 get 7 1 roll pop pop 5 1 roll pop
findfont/TT32R get addglyph}bind def/AddT3Char{findfont dup 5 2 roll 1 index
length 0 gt{cvx 1 index exch 4 exch put dup(imagemask)cvx cvn 5 exch put cvx}
{pop cvx}ifelse 3 -1 roll/CharProcs get 3 1 roll put dup/Encoding get 5 -1 roll
4 index put/Metrics get 3 1 roll put}bind def/AddT3T32Char Is2016andT32?{
/AddT32Char}{/AddT3Char}ifelse load def/GreNewFontT32{5 dict begin exch
/FontMatrix exch def exch/FontBBox exch def exch pop exch pop/CIDFontType 4 def
dup currentdict end/CIDFont defineresource 3 -1 roll dup/DrvSBCMap dup/CMap
resourcestatus{pop pop}{T32DefSBCMap}ifelse 5 -1 roll[exch]composefont dup
length dict copy dup/FID undef begin exch/TT32R exch def currentdict end
definefont/BitmapFontInit/ProcSet findresource begin/TT32R get[14 0 0 0 0 0]<>0
4 -1 roll addglyph end}bind def/GreNewFontT3{11 dict begin pop/FontType 3 def
/FontMatrix exch def/FontBBox exch def/Encoding exch def/CharProcs 257 dict def
CharProcs/.notdef{}put/Metrics 257 dict def Metrics/.notdef 3 -1 roll put
AddFontInfoBegin AddFontInfo AddFontInfoEnd/BuildChar{userdict begin/char exch
def dup/charname exch/Encoding get char get def dup/Metrics get charname 2 copy
known{get aload pop}{pop/.notdef get aload pop}ifelse setcachedevice begin
Encoding char get CharProcs exch 2 copy known{get}{pop/.notdef get}ifelse end
exec end}def currentdict end definefont pop}bind def/GreNewFont{Is2016andT32?
{GreNewFontT32}{GreNewFontT3}ifelse}bind def/UDF3{Is2016andT32?{/BitmapFontInit
/ProcSet findresource begin dup/CIDFont findresource removeall/CIDFont
undefineresource undefinefont end}{pop UDF}ifelse}bind def
%%EndResource
end reinitialize
/TT2F55b00
[78 0 0 0 0 0 ] 
 256 array 0 1 255 {1 index exch /.notdef put} for 
[0 0 0 0 ] 
[1 78 div 0 0 -1 78 div 0 0 ]
/__TT2F55b00
GreNewFont
T32RsrcBegin

1
/g258 [79 0 8 -35 71 -22 ] 
/g258 [63 13 true [1 0 0 1 -8 35 ]  0 0]
[<~zz++O=r^]4Jp5JR7@n,N^gJ)C;kn,O!ss6p"Qp])E6s6p#<p])E8s6p#<p])E8
s6p#<p])E8s6p"Qp])E6J)C;kp])E6J)C;Kn,O!o5JR70huF#O"onW*J,fVc
~>
 ]
/TT2F55b00 AddT3T32Char
T32RsrcEnd
Is2016andT32? not {
 /TT2F55b00 /Font G2UBegin
/g258 <2026> def
G2UEnd
} if
F /F1 0 /0 F /TT2F55b00 mF 
/F1S4E F1 [78.645 0 0 -78.645 0 0 ] mFS
F1S4E Ji 
2048 773 M <0101>[79  0]xS 
481 778 M <0101>[79  0]xS 
F0S4E Ji 
2016 102 M (Si)[53  0]xS 
F0S33 Ji 
2086 64 M (k  )[25 14  0]xS 
F0S4E Ji 
1763 197 M (S)S 
1816 197 M (t)S  1837 197 M (a)S  1881 197 M (b)S  1925 197 M (i)S  1943 197 M (l)S  1961 197 M (i)S  1978 197 M (t)S  2000 197 M (y)S  2040 197 M ( )S  2062 197 M (V)S  2115 197 M (i)S  2132 197 M (o)S  2176 197 M (l)S  2194 197 M (a)S  2238 197 M (t)S  2260 197 M (i)S 
2278 197 M (o)S  2321 197 M (n)S  
29 Lw N 1086 747 M 1241 748 I : 0.59 0.59 +S K 
; N 1297 749 M 1223 785 I 1227 776 I 1230 767 I 1231 757 I 1231 748 I 1231 739 I 1230 729 I 1227 720 I 1223 711 I 1223 711 I 1297 749 I 1297 749 I C 
 O N 1386 749 M 1541 749 I : 0.59 0.59 +S K 
; N 1597 749 M 1523 785 I 1523 785 I 1527 776 I 1529 768 I 1531 758 I 1532 749 I 1531 739 I 1529 730 I 1527 720 I 1523 711 I 1523 711 I 1597 749 I 1597 749 I C 
 O N 1987 553 M 1990 555 I 1992 558 I 1993 561 I 1993 564 I 1992 568 I 1990 571 I 1986 579 I 1981 587 I 1976 595 I 1974 599 I 1973 602 I 1971 606 I 1971 610 I 1972 615 I 1974 619 I 1976 623 I 1979 627 I 1984 635 I 1986 638 I 1988 642 I 1989 645 I 1989 648 I 1987 651 I 1986 654 I 1980 659 I 1974 664 I 1967 669 I 1960 675 I 1954 682 I 1952 686 I 1951 690 I 1950 695 I 1950 701 I 1951 708 I 1952 714 I 1956 726 I 1958 732 I 1960 737 I 1962 741 I 1963 744 I 1965 750 I 1966 755 I 1965 760 I 1963 765 I 1958 772 I 1955 776 I 1951 782 I 1947 788 I 1942 794 I 1936 803 I 1931 811 I 1929 815 I 1928 819 I 1926 823 I 1927 826 I 1928 829 I 1930 831 I 1933 833 I 1936 835 I 1944 839 I 1953 842 I 1963 845 I 1972 848 I 1980 852 I 1983 854 I 1985 857 I 1987 859 I 1987 862 I 1988 868 I 1987 875 I 1984 882 I 1980 890 I 1976 898 I 1968 913 I 1964 920 I 1962 927 I 1961 933 I 1961 938 I 1962 939 I 1964 941 I 1965 942 I 1968 943 I 1972 944 I 1977 945 I 1981 945 I 1987 944 I 1601 944 I 1601 553 I 1987 553 I 1987 553 I C 
0.754 0.754 0.754 1 scol  O 0 0 0 1 scol 3 Lw N 1987 553 M 1990 555 I 1992 558 I 1993 561 I 1993 564 I 1992 568 I 1990 571 I 1986 579 I 1981 587 I 1976 595 I 1974 599 I 1973 602 I 1971 606 I 1971 610 I 1972 615 I 1974 619 I 1976 623 I 1979 627 I 1984 635 I 1986 638 I 1988 642 I 1989 645 I 1989 648 I 1987 651 I 1986 654 I 1980 659 I 1974 664 I 1967 669 I 1960 675 I 1954 682 I 1952 686 I 1951 690 I 1950 695 I 1950 701 I 1951 708 I 1952 714 I 1956 726 I 1958 732 I 1960 737 I 1962 741 I 1963 744 I 1965 750 I 1966 755 I 1965 760 I 1963 765 I 1958 772 I 1955 776 I 1951 782 I 1947 788 I 1942 794 I 1936 803 I 1931 811 I 1929 815 I 1928 819 I 1926 823 I 1927 826 I 1928 829 I 1930 831 I 1933 833 I 1936 835 I 1944 839 I 1953 842 I 1963 845 I 1972 848 I 1980 852 I 1983 854 I 1985 857 I 1987 859 I 1987 862 I 1988 868 I 1987 875 I 1984 882 I 1980 890 I 1976 898 I 1968 913 I 1964 920 I 1962 927 I 1961 933 I 1961 938 I 1962 939 I 1964 941 I 1965 942 I 1968 943 I 1972 944 I 1977 945 I 1981 945 I 1987 944 I 1601 944 I 1601 553 I 1987 553 I 1987 553 I : 0.59 0.59 +S K 
; 1653 698 M (Comb)[57 43 66  0]xS 
1863 698 M (.)S 
1663 792 M ( Logic )[22 44 44 44 18 39  0]xS 
LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%+ font Helvetica
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
%%+ procset Pscript_T3Hdr 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
